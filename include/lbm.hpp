#ifndef PTA_GRAPHS_HPP
#define PTA_GRAPHS_HPP

#include "lhf/lhf.hpp"
#include <map>
#include <vector>
#include <string>

namespace PTA{

	using FuncDataT = std::string;

	struct PtrDataT {
		std::string var;
		std::string scope;
		std::string line;

		bool operator<(const PtrDataT& rhs) const {
			return std::tie(var, scope, line) < std::tie(rhs.var, rhs.scope, rhs.line);
		}
	};
	using NodeIdT = unsigned int;
	using EdgeT = std::pair<NodeIdT, NodeIdT>;

	enum IndexType {
		NODE_FOREST = 1,
		EDGE_FOREST = 2,
	};


	template<typename NodeDataT, typename DerivedGraphT>
	class BaseGraphAPI {
	protected:
		using NodePropertyT = unsigned int;
		using EdgePropertyT = long long;

		using NodeHashForest = lhf::LatticeHashForest<NodePropertyT>;
		using EdgeHashForest = lhf::LatticeHashForest<EdgePropertyT>;
	
		EdgeHashForest edgeForest;
		NodeHashForest nodeForest;
	
		inline const std::vector<EdgeT>& getGraph() const {
			return static_cast<const DerivedGraphT*>(this)->getGraph();
		}

		inline const std::map<NodeDataT, NodeIdT>& getNodeMap() const {
			return static_cast<const DerivedGraphT*>(this)->getNodeMap();
		}
	
		EdgePropertyT getEdgeProperty(const EdgeT& edge) const {
			const std::vector<EdgeT>& graph = getGraph();
			if (std::find(graph.begin(), graph.end(), edge) == graph.end()) {
				throw std::out_of_range("Invalid Edge");
			}
			EdgePropertyT property = (static_cast<EdgePropertyT>(edge.first) << 32) | static_cast<EdgePropertyT>(edge.second);
			return property;
		}
	
		EdgeT getEdge(const EdgePropertyT& edge_property) const {
			NodeIdT src = static_cast<NodeIdT>(edge_property >> 32);
			NodeIdT dst = static_cast<NodeIdT>(edge_property & 0xFFFFFFFF);
			return {src, dst};
		}
	
	public:
		inline NodeIdT getNodeId(const NodeDataT& node) const {
			auto it = getNodeMap().find(node);
			return (it != getNodeMap().end()) ? it->second : -1;
		}

		inline const NodeDataT& getNodeDetails(NodeIdT node_id) const {
			for (const auto& [node, nodeId] : getNodeMap()) {
				if (nodeId == node_id) {
					return node;
				}
			}
			throw std::out_of_range("NodeID not found in node_map");
		}

		inline lhf::Index getEmptySetIndex() const {
			return lhf::EMPTY_SET;
		}
	
		inline bool is_empty(lhf::Index i) {
			return edgeForest.is_empty(i);
		}
	
		inline bool is_subset(IndexType indexType, lhf::Index a, lhf::Index b) {
			if (indexType == EDGE_FOREST) {
				return edgeForest.is_subset(a, b) == EdgeHashForest::SubsetRelation::SUBSET;
			} else if (indexType == NODE_FOREST) {
				return nodeForest.is_subset(a, b) == NodeHashForest::SubsetRelation::SUBSET;
			}
			throw std::invalid_argument("Invalid index type");
		}

		inline bool is_superset(IndexType indexType, lhf::Index a, lhf::Index b) {
			if (indexType == EDGE_FOREST) {
				return edgeForest.is_subset(a, b) == EdgeHashForest::SubsetRelation::SUPERSET;
			} else if (indexType == NODE_FOREST) {
				return nodeForest.is_subset(a, b) == NodeHashForest::SubsetRelation::SUPERSET;
			}
			throw std::invalid_argument("Invalid index type");
		}
	
		inline lhf::Index getEdgeIndex(const EdgeT& edge) {
			return edgeForest.register_set_single(getEdgeProperty(edge));
		}
	
		inline lhf::Index getEdgeIndex(const EdgeT& edge, bool &cold) {
			return edgeForest.register_set_single(getEdgeProperty(edge), cold);
		}
	
		inline const EdgeHashForest::PropertySet &get_value_edge(lhf::Index idx) const {
			return edgeForest.get_value(idx);
		}

		inline const NodeHashForest::PropertySet &get_value_node(lhf::Index idx) const {
			return nodeForest.get_value(idx);
		}
	
		inline std::size_t size_of(IndexType indexType, lhf::Index idx) const {
			if (indexType == EDGE_FOREST) {
				return edgeForest.size_of(idx);
			} else if (indexType == NODE_FOREST) {
				return nodeForest.size_of(idx);
			}
			throw std::invalid_argument("Invalid index type");
		}
	
		inline bool contains(lhf::Index idx, const EdgeT& edge) const {
			return edgeForest.contains(idx, getEdgeProperty(edge));
		}

		inline bool contains(lhf::Index idx, const NodeIdT& node) const {
			return nodeForest.contains(idx, node);
		}
	
		inline lhf::Index set_union(IndexType indexType, lhf::Index a, lhf::Index b) {
			if (indexType == EDGE_FOREST) {
				return edgeForest.set_union(a, b);
			} else if (indexType == NODE_FOREST) {
				return nodeForest.set_union(a, b);
			}
			throw std::invalid_argument("Invalid index type");
		}
	
		inline lhf::Index set_insert_single(lhf::Index a, const EdgeT& edge) {
			return edgeForest.set_insert_single(a, getEdgeProperty(edge));
		}

		inline lhf::Index set_insert_single(lhf::Index a, const NodeIdT& node) {
			return nodeForest.set_insert_single(a, node);
		}
	
		inline lhf::Index set_remove_single(lhf::Index a, const EdgeT& edge) {
			return edgeForest.set_remove_single(a, getEdgeProperty(edge));
		}

		inline lhf::Index set_remove_single(lhf::Index a, const NodeIdT& node) {
			return nodeForest.set_remove_single(a, node);
		}
	
		inline lhf::Index set_difference(IndexType indexType, lhf::Index a, lhf::Index b) {
			if (indexType == EDGE_FOREST) {
				return edgeForest.set_difference(a, b);
			} else if (indexType == NODE_FOREST) {
				return nodeForest.set_difference(a, b);
			}
			throw std::invalid_argument("Invalid index type");
		}
	
		inline lhf::Index set_intersection(IndexType indexType, lhf::Index a, lhf::Index b) {
			if (indexType == EDGE_FOREST) {
				return edgeForest.set_intersection(a, b);
			} else if (indexType == NODE_FOREST) {
				return nodeForest.set_intersection(a, b);
			}
			throw std::invalid_argument("Invalid index type");
		}
	
		inline const NodeHashForest::PropertySet& get_value_points_to(lhf::Index idx) const {
			return nodeForest.get_value(idx);
		}
	
		lhf::Index get_points_to_set(lhf::Index a, NodeIdT node_id) {
			EdgeHashForest::PropertySet property_set = edgeForest.get_value(a);
			std::vector<NodeIdT> result;
			for (EdgePropertyT property : property_set) {
				EdgeT edge = getEdge(property);
				if (edge.first == node_id) {
					result.push_back(edge.second);
				}
			}
			return nodeForest.register_set(result);
		}
	
		lhf::Index get_points_to_set(lhf::Index a, const std::vector<NodeIdT>& node_ids) {
			lhf::Index result = getEmptySetIndex();
			for (NodeIdT node_id : node_ids) {
				lhf::Index index = get_points_to_set(a, node_id);
				result = nodeForest.set_union(result, index);
			}
			return result;
		}
	
		lhf::Index get_points_to_set(lhf::Index a, lhf::Index idx) {
			return get_points_to_set(a, get_value_points_to(idx));
		}
	
		lhf::Index get_points_to_set(lhf::Index a, NodeIdT node_id, unsigned int recursion_depth) {
			if (recursion_depth == 0) return {};
			lhf::Index result = get_points_to_set(a, node_id);
			for (int i = 1; i < recursion_depth; i++) {
				result = get_points_to_set(a, result);
				if (nodeForest.is_empty(result)) break;
			}
			return result;
		}
	
		lhf::Index get_points_to_set(lhf::Index a, const std::vector<NodeIdT>& node_ids, unsigned int recursion_depth) {
			if (recursion_depth == 0) return {};
			lhf::Index result = get_points_to_set(a, node_ids);
			for (int i = 1; i < recursion_depth; i++) {
				result = get_points_to_set(a, result);
				if (nodeForest.is_empty(result)) break;
			}
			return result;
		}
	
		void print_points_to_set(lhf::Index idx) const {
			const auto& set = nodeForest.get_value(idx);
			std::cout << "Points-to set (Index = " << idx << "): (";
			for (const auto& v : set) std::cout << v << ", ";
			std::cout << ")" << std::endl;
		}
	};


	class CallGraph : public BaseGraphAPI<FuncDataT, CallGraph> {
	private:
		// Mapping from NodeData to ID
		const std::map<FuncDataT, NodeIdT> node_map = {
			{"LBM_allocateGrid", 0},
            {"LBM_freeGrid", 1},
            {"LBM_initializeGrid", 2},
            {"LBM_swapGrids", 3},
            {"LBM_loadObstacleFile", 4},
            {"LBM_initializeSpecialCellsForLDC", 5},
            {"LBM_initializeSpecialCellsForChannel", 6},
            {"LBM_performStreamCollide", 7},
            {"LBM_handleInOutFlow", 8},
            {"LBM_showGridStatistics", 9},
            {"LBM_storeVelocityField", 10},
            {"storeValue", 11},
            {"LBM_compareVelocityField", 12},
            {"loadValue", 13},
            {"main", 14},
            {"MAIN_parseCommandLine", 15},
            {"MAIN_printInfo", 16},
            {"MAIN_initialize", 17},
            {"MAIN_finalize", 18},
            {"llvm.dbg.declare", 19},
            {"malloc", 20},
            {"printf", 21},
            {"exit", 22},
            {"free", 23},
            {"fopen", 24},
            {"fgetc", 25},
            {"fclose", 26},
            {"llvm.fmuladd.f64", 27},
            {"sqrt", 28},
            {"fprintf", 29},
            {"fwrite", 30},
            {"__isoc99_fscanf", 31},
            {"llvm.fmuladd.f32", 32},
            {"fread", 33},
            {"atoi", 34},
            {"stat", 35},
            {"llvm.dbg.value", 36},
            {"llvm.memcpy.p0.p0.i64", 37}
		};

		// Graph Representation: Vector of (caller, callee) pairs
		const std::vector<EdgeT> graph = {
			{0, 20},
            {0, 21},
            {0, 22},
            {1, 23},
            {4, 24},
            {4, 25},
            {4, 26},
            {7, 27},
            {8, 27},
            {9, 27},
            {9, 28},
            {9, 21},
            {10, 24},
            {10, 26},
            {10, 11},
            {10, 29},
            {11, 30},
            {12, 32},
            {12, 13},
            {12, 21},
            {12, 24},
            {12, 26},
            {12, 28},
            {12, 31},
            {13, 33},
            {14, 3},
            {14, 7},
            {14, 8},
            {14, 9},
            {14, 15},
            {14, 16},
            {14, 17},
            {14, 18},
            {14, 21},
            {15, 34},
            {15, 35},
            {15, 21},
            {15, 22},
            {16, 21},
            {16, 37},
            {17, 0},
            {17, 2},
            {17, 4},
            {17, 5},
            {17, 6},
            {17, 9},
            {18, 1},
            {18, 10},
            {18, 12},
            {18, 9}
		};

		const unsigned int graph_size = 50;
	
	public:
		inline const std::vector<EdgeT>& getGraph() const {
			return graph;
		}

		inline const std::map<FuncDataT, NodeIdT>& getNodeMap() const {
			return node_map;
		}

		inline unsigned int getGraphSize() const {
			return graph_size;
		}
	};


	class PointerGraph : public BaseGraphAPI<PtrDataT, PointerGraph> {
	private:
		// Mapping from NodeData to ID
		const std::map<PtrDataT, NodeIdT> node_map = {
			{{"srcGrid", "main.c", "21"}, 14},
            {{"dstGrid", "main.c", "21"}, 16},
            {{"ptr", "lbm.c", "25"}, 29},
            {{"call", "lbm.c", "29"}, 34},
            {{"i", "lbm.c", "29"}, 38},
            {{"i1", "lbm.c", "30"}, 40},
            {{"i2", "lbm.c", "39"}, 52},
            {{"add.ptr", "lbm.c", "39"}, 53},
            {{"ptr", "lbm.c", "44"}, 73},
            {{"i", "lbm.c", "47"}, 76},
            {{"add.ptr", "lbm.c", "47"}, 77},
            {{"i1", "lbm.c", "47"}, 79},
            {{"grid", "lbm.c", "53"}, 90},
            {{"arrayidx", "lbm.c", "63"}, 105},
            {{"arrayidx3", "lbm.c", "64"}, 110},
            {{"arrayidx6", "lbm.c", "65"}, 116},
            {{"arrayidx9", "lbm.c", "66"}, 121},
            {{"arrayidx12", "lbm.c", "67"}, 126},
            {{"arrayidx15", "lbm.c", "68"}, 131},
            {{"arrayidx18", "lbm.c", "69"}, 136},
            {{"arrayidx21", "lbm.c", "70"}, 141},
            {{"arrayidx24", "lbm.c", "71"}, 147},
            {{"arrayidx27", "lbm.c", "72"}, 152},
            {{"arrayidx30", "lbm.c", "73"}, 157},
            {{"arrayidx33", "lbm.c", "74"}, 162},
            {{"arrayidx36", "lbm.c", "75"}, 167},
            {{"arrayidx39", "lbm.c", "76"}, 172},
            {{"arrayidx42", "lbm.c", "77"}, 177},
            {{"arrayidx45", "lbm.c", "78"}, 182},
            {{"arrayidx48", "lbm.c", "79"}, 187},
            {{"arrayidx51", "lbm.c", "80"}, 192},
            {{"arrayidx54", "lbm.c", "81"}, 197},
            {{"arrayidx57", "lbm.c", "83"}, 202},
            {{"i", "lbm.c", "83"}, 203},
            {{"i1", "lbm.c", "83"}, 204},
            {{"grid1", "lbm.c", "89"}, 216},
            {{"grid2", "lbm.c", "89"}, 217},
            {{"i", "lbm.c", "90"}, 220},
            {{"i1", "lbm.c", "91"}, 222},
            {{"grid", "lbm.c", "97"}, 229},
            {{"arrayidx", "lbm.c", "105"}, 278},
            {{"i", "lbm.c", "105"}, 279},
            {{"i1", "lbm.c", "105"}, 280},
            {{"grid", "lbm.c", "117"}, 315},
            {{"arrayidx", "lbm.c", "132"}, 365},
            {{"i", "lbm.c", "132"}, 366},
            {{"i1", "lbm.c", "132"}, 367},
            {{"arrayidx42", "lbm.c", "138"}, 396},
            {{"i3", "lbm.c", "138"}, 397},
            {{"i4", "lbm.c", "138"}, 398},
            {{"grid", "lbm.c", "148"}, 422},
            {{"arrayidx", "lbm.c", "162"}, 464},
            {{"i", "lbm.c", "162"}, 465},
            {{"i1", "lbm.c", "162"}, 466},
            {{"arrayidx29", "lbm.c", "165"}, 483},
            {{"i3", "lbm.c", "165"}, 484},
            {{"i4", "lbm.c", "165"}, 485},
            {{"arrayidx40", "lbm.c", "166"}, 498},
            {{"i6", "lbm.c", "166"}, 499},
            {{"i7", "lbm.c", "166"}, 500},
            {{"srcGrid", "lbm.c", "175"}, 525},
            {{"dstGrid", "lbm.c", "175"}, 526},
            {{"arrayidx", "lbm.c", "187"}, 540},
            {{"i", "lbm.c", "187"}, 541},
            {{"i1", "lbm.c", "187"}, 542},
            {{"arrayidx3", "lbm.c", "188"}, 549},
            {{"arrayidx6", "lbm.c", "188"}, 553},
            {{"arrayidx9", "lbm.c", "189"}, 557},
            {{"arrayidx12", "lbm.c", "189"}, 562},
            {{"arrayidx15", "lbm.c", "190"}, 566},
            {{"arrayidx18", "lbm.c", "190"}, 571},
            {{"arrayidx21", "lbm.c", "191"}, 575},
            {{"arrayidx24", "lbm.c", "191"}, 580},
            {{"arrayidx27", "lbm.c", "192"}, 584},
            {{"arrayidx30", "lbm.c", "192"}, 589},
            {{"arrayidx33", "lbm.c", "193"}, 593},
            {{"arrayidx36", "lbm.c", "193"}, 598},
            {{"arrayidx39", "lbm.c", "194"}, 602},
            {{"arrayidx42", "lbm.c", "194"}, 607},
            {{"arrayidx45", "lbm.c", "195"}, 611},
            {{"arrayidx48", "lbm.c", "195"}, 616},
            {{"arrayidx51", "lbm.c", "196"}, 620},
            {{"arrayidx54", "lbm.c", "196"}, 625},
            {{"arrayidx57", "lbm.c", "197"}, 629},
            {{"arrayidx60", "lbm.c", "197"}, 634},
            {{"arrayidx63", "lbm.c", "198"}, 638},
            {{"arrayidx66", "lbm.c", "198"}, 643},
            {{"arrayidx69", "lbm.c", "199"}, 647},
            {{"arrayidx72", "lbm.c", "199"}, 652},
            {{"arrayidx75", "lbm.c", "200"}, 656},
            {{"arrayidx78", "lbm.c", "200"}, 661},
            {{"arrayidx81", "lbm.c", "201"}, 665},
            {{"arrayidx84", "lbm.c", "201"}, 670},
            {{"arrayidx87", "lbm.c", "202"}, 674},
            {{"arrayidx90", "lbm.c", "202"}, 679},
            {{"arrayidx93", "lbm.c", "203"}, 683},
            {{"arrayidx96", "lbm.c", "203"}, 688},
            {{"arrayidx99", "lbm.c", "204"}, 692},
            {{"arrayidx102", "lbm.c", "204"}, 697},
            {{"arrayidx105", "lbm.c", "205"}, 701},
            {{"arrayidx108", "lbm.c", "205"}, 706},
            {{"arrayidx111", "lbm.c", "206"}, 710},
            {{"arrayidx114", "lbm.c", "206"}, 715},
            {{"arrayidx117", "lbm.c", "210"}, 721},
            {{"arrayidx120", "lbm.c", "210"}, 725},
            {{"arrayidx124", "lbm.c", "211"}, 730},
            {{"arrayidx128", "lbm.c", "211"}, 735},
            {{"arrayidx132", "lbm.c", "212"}, 740},
            {{"arrayidx136", "lbm.c", "212"}, 745},
            {{"arrayidx140", "lbm.c", "213"}, 750},
            {{"arrayidx144", "lbm.c", "213"}, 755},
            {{"arrayidx148", "lbm.c", "214"}, 760},
            {{"arrayidx152", "lbm.c", "214"}, 765},
            {{"arrayidx156", "lbm.c", "215"}, 770},
            {{"arrayidx160", "lbm.c", "215"}, 775},
            {{"arrayidx164", "lbm.c", "216"}, 780},
            {{"arrayidx168", "lbm.c", "216"}, 785},
            {{"arrayidx172", "lbm.c", "217"}, 790},
            {{"arrayidx176", "lbm.c", "217"}, 795},
            {{"arrayidx180", "lbm.c", "218"}, 800},
            {{"arrayidx184", "lbm.c", "218"}, 805},
            {{"arrayidx188", "lbm.c", "219"}, 810},
            {{"arrayidx192", "lbm.c", "221"}, 816},
            {{"arrayidx195", "lbm.c", "221"}, 820},
            {{"arrayidx198", "lbm.c", "222"}, 825},
            {{"arrayidx202", "lbm.c", "222"}, 830},
            {{"arrayidx206", "lbm.c", "223"}, 835},
            {{"arrayidx210", "lbm.c", "223"}, 840},
            {{"arrayidx214", "lbm.c", "224"}, 845},
            {{"arrayidx218", "lbm.c", "224"}, 850},
            {{"arrayidx222", "lbm.c", "225"}, 855},
            {{"arrayidx226", "lbm.c", "225"}, 860},
            {{"arrayidx230", "lbm.c", "226"}, 866},
            {{"arrayidx233", "lbm.c", "226"}, 870},
            {{"arrayidx237", "lbm.c", "227"}, 875},
            {{"arrayidx241", "lbm.c", "227"}, 880},
            {{"arrayidx245", "lbm.c", "228"}, 885},
            {{"arrayidx249", "lbm.c", "228"}, 890},
            {{"arrayidx253", "lbm.c", "229"}, 895},
            {{"arrayidx257", "lbm.c", "229"}, 900},
            {{"arrayidx261", "lbm.c", "230"}, 905},
            {{"arrayidx265", "lbm.c", "230"}, 910},
            {{"arrayidx269", "lbm.c", "231"}, 916},
            {{"arrayidx272", "lbm.c", "231"}, 920},
            {{"arrayidx276", "lbm.c", "232"}, 925},
            {{"arrayidx280", "lbm.c", "232"}, 930},
            {{"arrayidx284", "lbm.c", "233"}, 935},
            {{"arrayidx288", "lbm.c", "233"}, 940},
            {{"arrayidx292", "lbm.c", "234"}, 945},
            {{"arrayidx296", "lbm.c", "234"}, 950},
            {{"arrayidx300", "lbm.c", "235"}, 955},
            {{"arrayidx304", "lbm.c", "235"}, 960},
            {{"arrayidx310", "lbm.c", "241"}, 972},
            {{"i71", "lbm.c", "241"}, 973},
            {{"i72", "lbm.c", "241"}, 974},
            {{"arrayidx318", "lbm.c", "248"}, 1003},
            {{"arrayidx325", "lbm.c", "248"}, 1014},
            {{"arrayidx328", "lbm.c", "250"}, 1018},
            {{"arrayidx337", "lbm.c", "250"}, 1031},
            {{"arrayidx340", "lbm.c", "251"}, 1035},
            {{"arrayidx349", "lbm.c", "251"}, 1046},
            {{"arrayidx352", "lbm.c", "252"}, 1050},
            {{"arrayidx361", "lbm.c", "252"}, 1060},
            {{"arrayidx364", "lbm.c", "253"}, 1064},
            {{"arrayidx373", "lbm.c", "253"}, 1074},
            {{"arrayidx376", "lbm.c", "254"}, 1078},
            {{"arrayidx385", "lbm.c", "254"}, 1088},
            {{"arrayidx388", "lbm.c", "255"}, 1092},
            {{"arrayidx397", "lbm.c", "255"}, 1102},
            {{"arrayidx400", "lbm.c", "257"}, 1106},
            {{"arrayidx411", "lbm.c", "257"}, 1119},
            {{"arrayidx414", "lbm.c", "258"}, 1123},
            {{"arrayidx426", "lbm.c", "258"}, 1137},
            {{"arrayidx429", "lbm.c", "259"}, 1141},
            {{"arrayidx440", "lbm.c", "259"}, 1153},
            {{"arrayidx443", "lbm.c", "260"}, 1157},
            {{"arrayidx456", "lbm.c", "260"}, 1171},
            {{"arrayidx459", "lbm.c", "261"}, 1175},
            {{"arrayidx470", "lbm.c", "261"}, 1187},
            {{"arrayidx473", "lbm.c", "262"}, 1191},
            {{"arrayidx484", "lbm.c", "262"}, 1203},
            {{"arrayidx487", "lbm.c", "263"}, 1207},
            {{"arrayidx500", "lbm.c", "263"}, 1221},
            {{"arrayidx503", "lbm.c", "264"}, 1225},
            {{"arrayidx516", "lbm.c", "264"}, 1239},
            {{"arrayidx519", "lbm.c", "265"}, 1243},
            {{"arrayidx530", "lbm.c", "265"}, 1255},
            {{"arrayidx533", "lbm.c", "266"}, 1259},
            {{"arrayidx544", "lbm.c", "266"}, 1271},
            {{"arrayidx547", "lbm.c", "267"}, 1275},
            {{"arrayidx560", "lbm.c", "267"}, 1289},
            {{"arrayidx563", "lbm.c", "268"}, 1293},
            {{"arrayidx576", "lbm.c", "268"}, 1307},
            {{"srcGrid", "lbm.c", "274"}, 1320},
            {{"arrayidx", "lbm.c", "290"}, 1333},
            {{"arrayidx3", "lbm.c", "290"}, 1338},
            {{"arrayidx7", "lbm.c", "291"}, 1344},
            {{"arrayidx11", "lbm.c", "291"}, 1350},
            {{"arrayidx15", "lbm.c", "292"}, 1356},
            {{"arrayidx19", "lbm.c", "292"}, 1361},
            {{"arrayidx23", "lbm.c", "293"}, 1367},
            {{"arrayidx27", "lbm.c", "293"}, 1373},
            {{"arrayidx31", "lbm.c", "294"}, 1379},
            {{"arrayidx35", "lbm.c", "294"}, 1385},
            {{"arrayidx39", "lbm.c", "295"}, 1391},
            {{"arrayidx43", "lbm.c", "295"}, 1397},
            {{"arrayidx47", "lbm.c", "296"}, 1403},
            {{"arrayidx51", "lbm.c", "296"}, 1409},
            {{"arrayidx55", "lbm.c", "297"}, 1415},
            {{"arrayidx59", "lbm.c", "297"}, 1421},
            {{"arrayidx63", "lbm.c", "298"}, 1427},
            {{"arrayidx67", "lbm.c", "298"}, 1433},
            {{"arrayidx71", "lbm.c", "299"}, 1439},
            {{"arrayidx75", "lbm.c", "300"}, 1446},
            {{"arrayidx78", "lbm.c", "300"}, 1451},
            {{"arrayidx82", "lbm.c", "301"}, 1457},
            {{"arrayidx86", "lbm.c", "301"}, 1463},
            {{"arrayidx90", "lbm.c", "302"}, 1469},
            {{"arrayidx94", "lbm.c", "302"}, 1475},
            {{"arrayidx98", "lbm.c", "303"}, 1481},
            {{"arrayidx102", "lbm.c", "303"}, 1487},
            {{"arrayidx106", "lbm.c", "304"}, 1493},
            {{"arrayidx110", "lbm.c", "304"}, 1499},
            {{"arrayidx114", "lbm.c", "305"}, 1505},
            {{"arrayidx118", "lbm.c", "305"}, 1511},
            {{"arrayidx122", "lbm.c", "306"}, 1517},
            {{"arrayidx126", "lbm.c", "306"}, 1523},
            {{"arrayidx130", "lbm.c", "307"}, 1529},
            {{"arrayidx134", "lbm.c", "307"}, 1535},
            {{"arrayidx138", "lbm.c", "308"}, 1541},
            {{"arrayidx142", "lbm.c", "308"}, 1547},
            {{"arrayidx146", "lbm.c", "309"}, 1553},
            {{"arrayidx168", "lbm.c", "321"}, 1595},
            {{"arrayidx176", "lbm.c", "323"}, 1604},
            {{"arrayidx184", "lbm.c", "324"}, 1613},
            {{"arrayidx192", "lbm.c", "325"}, 1622},
            {{"arrayidx200", "lbm.c", "326"}, 1631},
            {{"arrayidx208", "lbm.c", "327"}, 1640},
            {{"arrayidx216", "lbm.c", "328"}, 1649},
            {{"arrayidx226", "lbm.c", "330"}, 1660},
            {{"arrayidx237", "lbm.c", "331"}, 1673},
            {{"arrayidx247", "lbm.c", "332"}, 1684},
            {{"arrayidx259", "lbm.c", "333"}, 1697},
            {{"arrayidx269", "lbm.c", "334"}, 1708},
            {{"arrayidx279", "lbm.c", "335"}, 1719},
            {{"arrayidx291", "lbm.c", "336"}, 1732},
            {{"arrayidx303", "lbm.c", "337"}, 1745},
            {{"arrayidx313", "lbm.c", "338"}, 1756},
            {{"arrayidx323", "lbm.c", "339"}, 1767},
            {{"arrayidx335", "lbm.c", "340"}, 1780},
            {{"arrayidx347", "lbm.c", "341"}, 1793},
            {{"arrayidx355", "lbm.c", "354"}, 1811},
            {{"arrayidx358", "lbm.c", "354"}, 1816},
            {{"arrayidx362", "lbm.c", "355"}, 1822},
            {{"arrayidx366", "lbm.c", "355"}, 1828},
            {{"arrayidx370", "lbm.c", "356"}, 1834},
            {{"arrayidx374", "lbm.c", "356"}, 1840},
            {{"arrayidx378", "lbm.c", "357"}, 1845},
            {{"arrayidx382", "lbm.c", "357"}, 1851},
            {{"arrayidx386", "lbm.c", "358"}, 1857},
            {{"arrayidx390", "lbm.c", "358"}, 1863},
            {{"arrayidx394", "lbm.c", "359"}, 1869},
            {{"arrayidx398", "lbm.c", "359"}, 1875},
            {{"arrayidx402", "lbm.c", "360"}, 1881},
            {{"arrayidx406", "lbm.c", "360"}, 1887},
            {{"arrayidx410", "lbm.c", "361"}, 1893},
            {{"arrayidx414", "lbm.c", "361"}, 1899},
            {{"arrayidx418", "lbm.c", "362"}, 1905},
            {{"arrayidx422", "lbm.c", "362"}, 1911},
            {{"arrayidx426", "lbm.c", "363"}, 1917},
            {{"arrayidx430", "lbm.c", "364"}, 1923},
            {{"arrayidx433", "lbm.c", "364"}, 1927},
            {{"arrayidx437", "lbm.c", "365"}, 1932},
            {{"arrayidx441", "lbm.c", "365"}, 1937},
            {{"arrayidx445", "lbm.c", "366"}, 1942},
            {{"arrayidx449", "lbm.c", "366"}, 1947},
            {{"arrayidx453", "lbm.c", "367"}, 1952},
            {{"arrayidx457", "lbm.c", "367"}, 1957},
            {{"arrayidx461", "lbm.c", "368"}, 1962},
            {{"arrayidx465", "lbm.c", "368"}, 1967},
            {{"arrayidx469", "lbm.c", "369"}, 1973},
            {{"arrayidx472", "lbm.c", "369"}, 1977},
            {{"arrayidx476", "lbm.c", "370"}, 1982},
            {{"arrayidx480", "lbm.c", "370"}, 1987},
            {{"arrayidx484", "lbm.c", "371"}, 1992},
            {{"arrayidx488", "lbm.c", "371"}, 1997},
            {{"arrayidx492", "lbm.c", "372"}, 2002},
            {{"arrayidx496", "lbm.c", "372"}, 2007},
            {{"arrayidx500", "lbm.c", "373"}, 2012},
            {{"arrayidx504", "lbm.c", "373"}, 2017},
            {{"arrayidx508", "lbm.c", "374"}, 2023},
            {{"arrayidx511", "lbm.c", "374"}, 2027},
            {{"arrayidx515", "lbm.c", "375"}, 2032},
            {{"arrayidx519", "lbm.c", "375"}, 2037},
            {{"arrayidx523", "lbm.c", "376"}, 2042},
            {{"arrayidx527", "lbm.c", "376"}, 2047},
            {{"arrayidx531", "lbm.c", "377"}, 2052},
            {{"arrayidx535", "lbm.c", "377"}, 2057},
            {{"arrayidx539", "lbm.c", "378"}, 2062},
            {{"arrayidx543", "lbm.c", "378"}, 2067},
            {{"arrayidx550", "lbm.c", "384"}, 2079},
            {{"arrayidx553", "lbm.c", "384"}, 2084},
            {{"arrayidx557", "lbm.c", "385"}, 2090},
            {{"arrayidx561", "lbm.c", "385"}, 2096},
            {{"arrayidx565", "lbm.c", "386"}, 2102},
            {{"arrayidx569", "lbm.c", "386"}, 2108},
            {{"arrayidx573", "lbm.c", "387"}, 2114},
            {{"arrayidx577", "lbm.c", "387"}, 2120},
            {{"arrayidx581", "lbm.c", "388"}, 2126},
            {{"arrayidx585", "lbm.c", "388"}, 2132},
            {{"arrayidx589", "lbm.c", "389"}, 2138},
            {{"arrayidx593", "lbm.c", "389"}, 2144},
            {{"arrayidx597", "lbm.c", "390"}, 2150},
            {{"arrayidx601", "lbm.c", "390"}, 2156},
            {{"arrayidx605", "lbm.c", "391"}, 2162},
            {{"arrayidx609", "lbm.c", "391"}, 2168},
            {{"arrayidx613", "lbm.c", "392"}, 2174},
            {{"arrayidx617", "lbm.c", "392"}, 2180},
            {{"arrayidx621", "lbm.c", "393"}, 2186},
            {{"arrayidx625", "lbm.c", "394"}, 2192},
            {{"arrayidx628", "lbm.c", "394"}, 2196},
            {{"arrayidx632", "lbm.c", "395"}, 2201},
            {{"arrayidx636", "lbm.c", "395"}, 2206},
            {{"arrayidx640", "lbm.c", "396"}, 2211},
            {{"arrayidx644", "lbm.c", "396"}, 2216},
            {{"arrayidx648", "lbm.c", "397"}, 2221},
            {{"arrayidx652", "lbm.c", "397"}, 2226},
            {{"arrayidx656", "lbm.c", "398"}, 2231},
            {{"arrayidx660", "lbm.c", "398"}, 2236},
            {{"arrayidx664", "lbm.c", "399"}, 2242},
            {{"arrayidx667", "lbm.c", "399"}, 2246},
            {{"arrayidx671", "lbm.c", "400"}, 2251},
            {{"arrayidx675", "lbm.c", "400"}, 2256},
            {{"arrayidx679", "lbm.c", "401"}, 2261},
            {{"arrayidx683", "lbm.c", "401"}, 2266},
            {{"arrayidx687", "lbm.c", "402"}, 2271},
            {{"arrayidx691", "lbm.c", "402"}, 2276},
            {{"arrayidx695", "lbm.c", "403"}, 2281},
            {{"arrayidx699", "lbm.c", "403"}, 2286},
            {{"arrayidx703", "lbm.c", "404"}, 2292},
            {{"arrayidx706", "lbm.c", "404"}, 2296},
            {{"arrayidx710", "lbm.c", "405"}, 2301},
            {{"arrayidx714", "lbm.c", "405"}, 2306},
            {{"arrayidx718", "lbm.c", "406"}, 2311},
            {{"arrayidx722", "lbm.c", "406"}, 2316},
            {{"arrayidx726", "lbm.c", "407"}, 2321},
            {{"arrayidx730", "lbm.c", "407"}, 2326},
            {{"arrayidx734", "lbm.c", "408"}, 2331},
            {{"arrayidx738", "lbm.c", "408"}, 2336},
            {{"arrayidx758", "lbm.c", "422"}, 2366},
            {{"arrayidx766", "lbm.c", "424"}, 2375},
            {{"arrayidx774", "lbm.c", "425"}, 2384},
            {{"arrayidx782", "lbm.c", "426"}, 2393},
            {{"arrayidx790", "lbm.c", "427"}, 2402},
            {{"arrayidx798", "lbm.c", "428"}, 2411},
            {{"arrayidx806", "lbm.c", "429"}, 2420},
            {{"arrayidx816", "lbm.c", "431"}, 2431},
            {{"arrayidx828", "lbm.c", "432"}, 2444},
            {{"arrayidx838", "lbm.c", "433"}, 2455},
            {{"arrayidx850", "lbm.c", "434"}, 2468},
            {{"arrayidx860", "lbm.c", "435"}, 2479},
            {{"arrayidx870", "lbm.c", "436"}, 2490},
            {{"arrayidx882", "lbm.c", "437"}, 2503},
            {{"arrayidx894", "lbm.c", "438"}, 2516},
            {{"arrayidx904", "lbm.c", "439"}, 2527},
            {{"arrayidx914", "lbm.c", "440"}, 2538},
            {{"arrayidx926", "lbm.c", "441"}, 2551},
            {{"arrayidx938", "lbm.c", "442"}, 2564},
            {{"grid", "lbm.c", "448"}, 2574},
            {{"arrayidx", "lbm.c", "460"}, 2620},
            {{"arrayidx3", "lbm.c", "460"}, 2624},
            {{"arrayidx7", "lbm.c", "461"}, 2629},
            {{"arrayidx11", "lbm.c", "461"}, 2634},
            {{"arrayidx15", "lbm.c", "462"}, 2639},
            {{"arrayidx19", "lbm.c", "462"}, 2644},
            {{"arrayidx23", "lbm.c", "463"}, 2649},
            {{"arrayidx27", "lbm.c", "463"}, 2654},
            {{"arrayidx31", "lbm.c", "464"}, 2659},
            {{"arrayidx35", "lbm.c", "464"}, 2664},
            {{"arrayidx39", "lbm.c", "465"}, 2669},
            {{"arrayidx43", "lbm.c", "465"}, 2674},
            {{"arrayidx47", "lbm.c", "466"}, 2679},
            {{"arrayidx51", "lbm.c", "466"}, 2684},
            {{"arrayidx55", "lbm.c", "467"}, 2689},
            {{"arrayidx59", "lbm.c", "467"}, 2694},
            {{"arrayidx63", "lbm.c", "468"}, 2699},
            {{"arrayidx67", "lbm.c", "468"}, 2704},
            {{"arrayidx71", "lbm.c", "469"}, 2709},
            {{"arrayidx80", "lbm.c", "474"}, 2728},
            {{"i19", "lbm.c", "474"}, 2729},
            {{"i20", "lbm.c", "474"}, 2730},
            {{"arrayidx84", "lbm.c", "478"}, 2741},
            {{"i22", "lbm.c", "478"}, 2742},
            {{"i23", "lbm.c", "478"}, 2743},
            {{"arrayidx94", "lbm.c", "483"}, 2761},
            {{"arrayidx97", "lbm.c", "483"}, 2765},
            {{"arrayidx100", "lbm.c", "484"}, 2770},
            {{"arrayidx104", "lbm.c", "484"}, 2775},
            {{"arrayidx108", "lbm.c", "485"}, 2780},
            {{"arrayidx112", "lbm.c", "485"}, 2785},
            {{"arrayidx116", "lbm.c", "486"}, 2790},
            {{"arrayidx120", "lbm.c", "486"}, 2795},
            {{"arrayidx124", "lbm.c", "487"}, 2800},
            {{"arrayidx128", "lbm.c", "487"}, 2805},
            {{"arrayidx132", "lbm.c", "488"}, 2811},
            {{"arrayidx135", "lbm.c", "488"}, 2815},
            {{"arrayidx139", "lbm.c", "489"}, 2820},
            {{"arrayidx143", "lbm.c", "489"}, 2825},
            {{"arrayidx147", "lbm.c", "490"}, 2830},
            {{"arrayidx151", "lbm.c", "490"}, 2835},
            {{"arrayidx155", "lbm.c", "491"}, 2840},
            {{"arrayidx159", "lbm.c", "491"}, 2845},
            {{"arrayidx163", "lbm.c", "492"}, 2850},
            {{"arrayidx167", "lbm.c", "492"}, 2855},
            {{"arrayidx171", "lbm.c", "493"}, 2861},
            {{"arrayidx174", "lbm.c", "493"}, 2865},
            {{"arrayidx178", "lbm.c", "494"}, 2870},
            {{"arrayidx182", "lbm.c", "494"}, 2875},
            {{"arrayidx186", "lbm.c", "495"}, 2880},
            {{"arrayidx190", "lbm.c", "495"}, 2885},
            {{"arrayidx194", "lbm.c", "496"}, 2890},
            {{"arrayidx198", "lbm.c", "496"}, 2895},
            {{"arrayidx202", "lbm.c", "497"}, 2900},
            {{"arrayidx206", "lbm.c", "497"}, 2905},
            {{"grid", "lbm.c", "554"}, 2950},
            {{"ux", "lbm.c", "557"}, 2954},
            {{"uy", "lbm.c", "557"}, 2956},
            {{"uz", "lbm.c", "557"}, 2958},
            {{"call", "lbm.c", "559"}, 2969},
            {{"arrayidx", "lbm.c", "564"}, 3003},
            {{"arrayidx20", "lbm.c", "564"}, 3013},
            {{"arrayidx30", "lbm.c", "565"}, 3024},
            {{"arrayidx40", "lbm.c", "565"}, 3035},
            {{"arrayidx50", "lbm.c", "566"}, 3046},
            {{"arrayidx60", "lbm.c", "566"}, 3057},
            {{"arrayidx70", "lbm.c", "567"}, 3068},
            {{"arrayidx80", "lbm.c", "567"}, 3079},
            {{"arrayidx90", "lbm.c", "568"}, 3090},
            {{"arrayidx100", "lbm.c", "568"}, 3101},
            {{"arrayidx110", "lbm.c", "569"}, 3112},
            {{"arrayidx120", "lbm.c", "569"}, 3123},
            {{"arrayidx130", "lbm.c", "570"}, 3134},
            {{"arrayidx140", "lbm.c", "570"}, 3145},
            {{"arrayidx150", "lbm.c", "571"}, 3156},
            {{"arrayidx160", "lbm.c", "571"}, 3167},
            {{"arrayidx170", "lbm.c", "572"}, 3178},
            {{"arrayidx180", "lbm.c", "572"}, 3189},
            {{"arrayidx190", "lbm.c", "573"}, 3200},
            {{"arrayidx200", "lbm.c", "574"}, 3213},
            {{"arrayidx209", "lbm.c", "574"}, 3223},
            {{"arrayidx218", "lbm.c", "575"}, 3234},
            {{"arrayidx228", "lbm.c", "575"}, 3245},
            {{"arrayidx238", "lbm.c", "576"}, 3256},
            {{"arrayidx248", "lbm.c", "576"}, 3267},
            {{"arrayidx258", "lbm.c", "577"}, 3278},
            {{"arrayidx268", "lbm.c", "577"}, 3289},
            {{"arrayidx278", "lbm.c", "578"}, 3300},
            {{"arrayidx288", "lbm.c", "578"}, 3311},
            {{"arrayidx299", "lbm.c", "579"}, 3324},
            {{"arrayidx308", "lbm.c", "579"}, 3334},
            {{"arrayidx318", "lbm.c", "580"}, 3345},
            {{"arrayidx328", "lbm.c", "580"}, 3356},
            {{"arrayidx338", "lbm.c", "581"}, 3367},
            {{"arrayidx348", "lbm.c", "581"}, 3378},
            {{"arrayidx358", "lbm.c", "582"}, 3389},
            {{"arrayidx368", "lbm.c", "582"}, 3400},
            {{"arrayidx378", "lbm.c", "583"}, 3411},
            {{"arrayidx388", "lbm.c", "583"}, 3422},
            {{"arrayidx399", "lbm.c", "584"}, 3435},
            {{"arrayidx408", "lbm.c", "584"}, 3445},
            {{"arrayidx418", "lbm.c", "585"}, 3456},
            {{"arrayidx428", "lbm.c", "585"}, 3467},
            {{"arrayidx438", "lbm.c", "586"}, 3478},
            {{"arrayidx448", "lbm.c", "586"}, 3489},
            {{"arrayidx458", "lbm.c", "587"}, 3500},
            {{"arrayidx468", "lbm.c", "587"}, 3511},
            {{"arrayidx478", "lbm.c", "588"}, 3522},
            {{"arrayidx488", "lbm.c", "588"}, 3533},
            {{"file", "lbm.c", "516"}, 3581},
            {{"v", "lbm.c", "516"}, 3582},
            {{"litteBigEndianTest", "lbm.c", "517"}, 3584},
            {{"i", "lbm.c", "518"}, 3591},
            {{"i2", "lbm.c", "519"}, 3596},
            {{"arrayidx", "lbm.c", "524"}, 3613},
            {{"arrayidx7", "lbm.c", "524"}, 3616},
            {{"arraydecay", "lbm.c", "526"}, 3623},
            {{"i4", "lbm.c", "529"}, 3629},
            {{"grid", "lbm.c", "614"}, 3645},
            {{"fileUx", "lbm.c", "618"}, 3649},
            {{"fileUy", "lbm.c", "618"}, 3651},
            {{"fileUz", "lbm.c", "618"}, 3653},
            {{"call", "lbm.c", "622"}, 3665},
            {{"arrayidx", "lbm.c", "627"}, 3707},
            {{"arrayidx20", "lbm.c", "627"}, 3717},
            {{"arrayidx30", "lbm.c", "628"}, 3728},
            {{"arrayidx40", "lbm.c", "628"}, 3739},
            {{"arrayidx50", "lbm.c", "629"}, 3750},
            {{"arrayidx60", "lbm.c", "629"}, 3761},
            {{"arrayidx70", "lbm.c", "630"}, 3772},
            {{"arrayidx80", "lbm.c", "630"}, 3783},
            {{"arrayidx90", "lbm.c", "631"}, 3794},
            {{"arrayidx100", "lbm.c", "631"}, 3805},
            {{"arrayidx110", "lbm.c", "632"}, 3816},
            {{"arrayidx120", "lbm.c", "632"}, 3827},
            {{"arrayidx130", "lbm.c", "633"}, 3838},
            {{"arrayidx140", "lbm.c", "633"}, 3849},
            {{"arrayidx150", "lbm.c", "634"}, 3860},
            {{"arrayidx160", "lbm.c", "634"}, 3871},
            {{"arrayidx170", "lbm.c", "635"}, 3882},
            {{"arrayidx180", "lbm.c", "635"}, 3893},
            {{"arrayidx190", "lbm.c", "636"}, 3904},
            {{"arrayidx200", "lbm.c", "637"}, 3916},
            {{"arrayidx209", "lbm.c", "637"}, 3926},
            {{"arrayidx218", "lbm.c", "638"}, 3937},
            {{"arrayidx228", "lbm.c", "638"}, 3948},
            {{"arrayidx238", "lbm.c", "639"}, 3959},
            {{"arrayidx248", "lbm.c", "639"}, 3970},
            {{"arrayidx258", "lbm.c", "640"}, 3981},
            {{"arrayidx268", "lbm.c", "640"}, 3992},
            {{"arrayidx278", "lbm.c", "641"}, 4003},
            {{"arrayidx288", "lbm.c", "641"}, 4014},
            {{"arrayidx298", "lbm.c", "642"}, 4026},
            {{"arrayidx307", "lbm.c", "642"}, 4036},
            {{"arrayidx317", "lbm.c", "643"}, 4047},
            {{"arrayidx327", "lbm.c", "643"}, 4058},
            {{"arrayidx337", "lbm.c", "644"}, 4069},
            {{"arrayidx347", "lbm.c", "644"}, 4080},
            {{"arrayidx357", "lbm.c", "645"}, 4091},
            {{"arrayidx367", "lbm.c", "645"}, 4102},
            {{"arrayidx377", "lbm.c", "646"}, 4113},
            {{"arrayidx387", "lbm.c", "646"}, 4124},
            {{"arrayidx397", "lbm.c", "647"}, 4136},
            {{"arrayidx406", "lbm.c", "647"}, 4146},
            {{"arrayidx416", "lbm.c", "648"}, 4157},
            {{"arrayidx426", "lbm.c", "648"}, 4168},
            {{"arrayidx436", "lbm.c", "649"}, 4179},
            {{"arrayidx446", "lbm.c", "649"}, 4190},
            {{"arrayidx456", "lbm.c", "650"}, 4201},
            {{"arrayidx466", "lbm.c", "650"}, 4212},
            {{"arrayidx476", "lbm.c", "651"}, 4223},
            {{"arrayidx486", "lbm.c", "651"}, 4234},
            {{"file", "lbm.c", "535"}, 4302},
            {{"v", "lbm.c", "535"}, 4303},
            {{"litteBigEndianTest", "lbm.c", "536"}, 4305},
            {{"i", "lbm.c", "537"}, 4312},
            {{"i2", "lbm.c", "538"}, 4317},
            {{"arraydecay", "lbm.c", "542"}, 4320},
            {{"arrayidx", "lbm.c", "545"}, 4336},
            {{"arrayidx7", "lbm.c", "545"}, 4339},
            {{"i4", "lbm.c", "548"}, 4347},
            {{"param", "main.c", "26"}, 4370},
            {{"nTimeSteps", "main.c", "39"}, 4389},
            {{"simType", "main.c", "40"}, 4393},
            {{"i2", "main.c", "41"}, 4397},
            {{"arraydecay", "main.c", "41"}, 4398},
            {{"i3", "main.c", "44"}, 4402},
            {{"arraydecay2", "main.c", "44"}, 4403},
            {{"i4", "main.c", "44"}, 4404},
            {{"arraydecay3", "main.c", "44"}, 4405},
            {{"i5", "main.c", "49"}, 4413},
            {{"arraydecay6", "main.c", "49"}, 4414},
            {{"param", "main.c", "63"}, 4429},
            {{"nTimeSteps", "main.c", "71"}, 4449},
            {{"resultFilename", "main.c", "72"}, 4454},
            {{"action", "main.c", "73"}, 4460},
            {{"simType", "main.c", "74"}, 4465},
            {{"obstacleFilename", "main.c", "77"}, 4472},
            {{"obstacleFilename11", "main.c", "79"}, 4474},
            {{"obstacleFilename15", "main.c", "81"}, 4481},
            {{"st_size", "main.c", "84"}, 4486},
            {{"obstacleFilename20", "main.c", "88"}, 4491},
            {{"st_size21", "main.c", "88"}, 4493},
            {{"obstacleFilename24", "main.c", "93"}, 4502},
            {{"action26", "main.c", "95"}, 4505},
            {{"resultFilename29", "main.c", "96"}, 4509},
            {{"resultFilename34", "main.c", "98"}, 4514},
            {{"param", "main.c", "105"}, 4522},
            {{"actionString", "main.c", "106"}, 4524},
            {{"simTypeString", "main.c", "107"}, 4526},
            {{"i", "main.c", "106"}, 4529},
            {{"i1", "main.c", "107"}, 4536},
            {{"nTimeSteps", "main.c", "116"}, 4538},
            {{"resultFilename", "main.c", "116"}, 4540},
            {{"action", "main.c", "117"}, 4542},
            {{"arrayidx", "main.c", "117"}, 4545},
            {{"arraydecay", "main.c", "117"}, 4546},
            {{"simType", "main.c", "117"}, 4547},
            {{"arrayidx2", "main.c", "117"}, 4550},
            {{"arraydecay3", "main.c", "117"}, 4551},
            {{"obstacleFilename", "main.c", "118"}, 4552},
            {{"obstacleFilename4", "main.c", "119"}, 4558},
            {{"param", "main.c", "124"}, 4566},
            {{"i", "main.c", "128"}, 4570},
            {{"arraydecay", "main.c", "128"}, 4571},
            {{"i1", "main.c", "129"}, 4573},
            {{"arraydecay1", "main.c", "129"}, 4574},
            {{"obstacleFilename", "main.c", "131"}, 4576},
            {{"i3", "main.c", "132"}, 4580},
            {{"arraydecay2", "main.c", "132"}, 4581},
            {{"obstacleFilename3", "main.c", "132"}, 4582},
            {{"i5", "main.c", "133"}, 4585},
            {{"arraydecay4", "main.c", "133"}, 4586},
            {{"obstacleFilename5", "main.c", "133"}, 4587},
            {{"simType", "main.c", "136"}, 4592},
            {{"i8", "main.c", "137"}, 4596},
            {{"arraydecay8", "main.c", "137"}, 4597},
            {{"i9", "main.c", "138"}, 4599},
            {{"arraydecay9", "main.c", "138"}, 4600},
            {{"i10", "main.c", "141"}, 4604},
            {{"arraydecay10", "main.c", "141"}, 4605},
            {{"i11", "main.c", "142"}, 4607},
            {{"arraydecay11", "main.c", "142"}, 4608},
            {{"i12", "main.c", "145"}, 4611},
            {{"arraydecay13", "main.c", "145"}, 4612},
            {{"param", "main.c", "150"}, 4616},
            {{"i", "main.c", "151"}, 4618},
            {{"arraydecay", "main.c", "151"}, 4619},
            {{"action", "main.c", "153"}, 4621},
            {{"i2", "main.c", "154"}, 4625},
            {{"arraydecay1", "main.c", "154"}, 4626},
            {{"resultFilename", "main.c", "154"}, 4627},
            {{"action2", "main.c", "155"}, 4633},
            {{"i5", "main.c", "156"}, 4637},
            {{"arraydecay5", "main.c", "156"}, 4638},
            {{"resultFilename6", "main.c", "156"}, 4639},
            {{"i", "main.c", "106"}, 4663},
            {{"i1", "main.c", "107"}, 4666},
            {{"simTypeString", "main.c", "107"}, 4669},
            {{"actionString", "main.c", "106"}, 4670},
            {{"fileStat", "main.c", "64"}, 4671},
            {{"param", "main.c", "26"}, 4672},
            {{"param", "main.c", "26"}, 4673},
            {{"param", "main.c", "26"}, 4674},
            {{"param", "main.c", "26"}, 4675},
            {{"param", "main.c", "26"}, 4676},
            {{"buffer", "lbm.c", "539"}, 4677},
            {{"buffer", "lbm.c", "520"}, 4678}
		};
		
		// Graph Representation: Vector of (pointer, pointee) pairs
		const std::vector<EdgeT> graph = {
			{14, 34},
            {16, 34},
            {29, 16},
            {29, 14},
            {38, 34},
            {40, 34},
            {52, 34},
            {53, 34},
            {73, 16},
            {73, 14},
            {76, 34},
            {77, 34},
            {79, 34},
            {90, 34},
            {105, 34},
            {110, 34},
            {116, 34},
            {121, 34},
            {126, 34},
            {131, 34},
            {136, 34},
            {141, 34},
            {147, 34},
            {152, 34},
            {157, 34},
            {162, 34},
            {167, 34},
            {172, 34},
            {177, 34},
            {182, 34},
            {187, 34},
            {192, 34},
            {197, 34},
            {202, 34},
            {203, 34},
            {204, 34},
            {216, 14},
            {217, 16},
            {220, 34},
            {222, 34},
            {229, 34},
            {278, 34},
            {279, 34},
            {280, 34},
            {315, 34},
            {365, 34},
            {366, 34},
            {367, 34},
            {396, 34},
            {397, 34},
            {398, 34},
            {422, 34},
            {464, 34},
            {465, 34},
            {466, 34},
            {483, 34},
            {484, 34},
            {485, 34},
            {498, 34},
            {499, 34},
            {500, 34},
            {525, 34},
            {526, 34},
            {540, 34},
            {541, 34},
            {542, 34},
            {549, 34},
            {553, 34},
            {557, 34},
            {562, 34},
            {566, 34},
            {571, 34},
            {575, 34},
            {580, 34},
            {584, 34},
            {589, 34},
            {593, 34},
            {598, 34},
            {602, 34},
            {607, 34},
            {611, 34},
            {616, 34},
            {620, 34},
            {625, 34},
            {629, 34},
            {634, 34},
            {638, 34},
            {643, 34},
            {647, 34},
            {652, 34},
            {656, 34},
            {661, 34},
            {665, 34},
            {670, 34},
            {674, 34},
            {679, 34},
            {683, 34},
            {688, 34},
            {692, 34},
            {697, 34},
            {701, 34},
            {706, 34},
            {710, 34},
            {715, 34},
            {721, 34},
            {725, 34},
            {730, 34},
            {735, 34},
            {740, 34},
            {745, 34},
            {750, 34},
            {755, 34},
            {760, 34},
            {765, 34},
            {770, 34},
            {775, 34},
            {780, 34},
            {785, 34},
            {790, 34},
            {795, 34},
            {800, 34},
            {805, 34},
            {810, 34},
            {816, 34},
            {820, 34},
            {825, 34},
            {830, 34},
            {835, 34},
            {840, 34},
            {845, 34},
            {850, 34},
            {855, 34},
            {860, 34},
            {866, 34},
            {870, 34},
            {875, 34},
            {880, 34},
            {885, 34},
            {890, 34},
            {895, 34},
            {900, 34},
            {905, 34},
            {910, 34},
            {916, 34},
            {920, 34},
            {925, 34},
            {930, 34},
            {935, 34},
            {940, 34},
            {945, 34},
            {950, 34},
            {955, 34},
            {960, 34},
            {972, 34},
            {973, 34},
            {974, 34},
            {1003, 34},
            {1014, 34},
            {1018, 34},
            {1031, 34},
            {1035, 34},
            {1046, 34},
            {1050, 34},
            {1060, 34},
            {1064, 34},
            {1074, 34},
            {1078, 34},
            {1088, 34},
            {1092, 34},
            {1102, 34},
            {1106, 34},
            {1119, 34},
            {1123, 34},
            {1137, 34},
            {1141, 34},
            {1153, 34},
            {1157, 34},
            {1171, 34},
            {1175, 34},
            {1187, 34},
            {1191, 34},
            {1203, 34},
            {1207, 34},
            {1221, 34},
            {1225, 34},
            {1239, 34},
            {1243, 34},
            {1255, 34},
            {1259, 34},
            {1271, 34},
            {1275, 34},
            {1289, 34},
            {1293, 34},
            {1307, 34},
            {1320, 34},
            {1333, 34},
            {1338, 34},
            {1344, 34},
            {1350, 34},
            {1356, 34},
            {1361, 34},
            {1367, 34},
            {1373, 34},
            {1379, 34},
            {1385, 34},
            {1391, 34},
            {1397, 34},
            {1403, 34},
            {1409, 34},
            {1415, 34},
            {1421, 34},
            {1427, 34},
            {1433, 34},
            {1439, 34},
            {1446, 34},
            {1451, 34},
            {1457, 34},
            {1463, 34},
            {1469, 34},
            {1475, 34},
            {1481, 34},
            {1487, 34},
            {1493, 34},
            {1499, 34},
            {1505, 34},
            {1511, 34},
            {1517, 34},
            {1523, 34},
            {1529, 34},
            {1535, 34},
            {1541, 34},
            {1547, 34},
            {1553, 34},
            {1595, 34},
            {1604, 34},
            {1613, 34},
            {1622, 34},
            {1631, 34},
            {1640, 34},
            {1649, 34},
            {1660, 34},
            {1673, 34},
            {1684, 34},
            {1697, 34},
            {1708, 34},
            {1719, 34},
            {1732, 34},
            {1745, 34},
            {1756, 34},
            {1767, 34},
            {1780, 34},
            {1793, 34},
            {1811, 34},
            {1816, 34},
            {1822, 34},
            {1828, 34},
            {1834, 34},
            {1840, 34},
            {1845, 34},
            {1851, 34},
            {1857, 34},
            {1863, 34},
            {1869, 34},
            {1875, 34},
            {1881, 34},
            {1887, 34},
            {1893, 34},
            {1899, 34},
            {1905, 34},
            {1911, 34},
            {1917, 34},
            {1923, 34},
            {1927, 34},
            {1932, 34},
            {1937, 34},
            {1942, 34},
            {1947, 34},
            {1952, 34},
            {1957, 34},
            {1962, 34},
            {1967, 34},
            {1973, 34},
            {1977, 34},
            {1982, 34},
            {1987, 34},
            {1992, 34},
            {1997, 34},
            {2002, 34},
            {2007, 34},
            {2012, 34},
            {2017, 34},
            {2023, 34},
            {2027, 34},
            {2032, 34},
            {2037, 34},
            {2042, 34},
            {2047, 34},
            {2052, 34},
            {2057, 34},
            {2062, 34},
            {2067, 34},
            {2079, 34},
            {2084, 34},
            {2090, 34},
            {2096, 34},
            {2102, 34},
            {2108, 34},
            {2114, 34},
            {2120, 34},
            {2126, 34},
            {2132, 34},
            {2138, 34},
            {2144, 34},
            {2150, 34},
            {2156, 34},
            {2162, 34},
            {2168, 34},
            {2174, 34},
            {2180, 34},
            {2186, 34},
            {2192, 34},
            {2196, 34},
            {2201, 34},
            {2206, 34},
            {2211, 34},
            {2216, 34},
            {2221, 34},
            {2226, 34},
            {2231, 34},
            {2236, 34},
            {2242, 34},
            {2246, 34},
            {2251, 34},
            {2256, 34},
            {2261, 34},
            {2266, 34},
            {2271, 34},
            {2276, 34},
            {2281, 34},
            {2286, 34},
            {2292, 34},
            {2296, 34},
            {2301, 34},
            {2306, 34},
            {2311, 34},
            {2316, 34},
            {2321, 34},
            {2326, 34},
            {2331, 34},
            {2336, 34},
            {2366, 34},
            {2375, 34},
            {2384, 34},
            {2393, 34},
            {2402, 34},
            {2411, 34},
            {2420, 34},
            {2431, 34},
            {2444, 34},
            {2455, 34},
            {2468, 34},
            {2479, 34},
            {2490, 34},
            {2503, 34},
            {2516, 34},
            {2527, 34},
            {2538, 34},
            {2551, 34},
            {2564, 34},
            {2574, 34},
            {2620, 34},
            {2624, 34},
            {2629, 34},
            {2634, 34},
            {2639, 34},
            {2644, 34},
            {2649, 34},
            {2654, 34},
            {2659, 34},
            {2664, 34},
            {2669, 34},
            {2674, 34},
            {2679, 34},
            {2684, 34},
            {2689, 34},
            {2694, 34},
            {2699, 34},
            {2704, 34},
            {2709, 34},
            {2728, 34},
            {2729, 34},
            {2730, 34},
            {2741, 34},
            {2742, 34},
            {2743, 34},
            {2761, 34},
            {2765, 34},
            {2770, 34},
            {2775, 34},
            {2780, 34},
            {2785, 34},
            {2790, 34},
            {2795, 34},
            {2800, 34},
            {2805, 34},
            {2811, 34},
            {2815, 34},
            {2820, 34},
            {2825, 34},
            {2830, 34},
            {2835, 34},
            {2840, 34},
            {2845, 34},
            {2850, 34},
            {2855, 34},
            {2861, 34},
            {2865, 34},
            {2870, 34},
            {2875, 34},
            {2880, 34},
            {2885, 34},
            {2890, 34},
            {2895, 34},
            {2900, 34},
            {2905, 34},
            {2950, 34},
            {3003, 34},
            {3013, 34},
            {3024, 34},
            {3035, 34},
            {3046, 34},
            {3057, 34},
            {3068, 34},
            {3079, 34},
            {3090, 34},
            {3101, 34},
            {3112, 34},
            {3123, 34},
            {3134, 34},
            {3145, 34},
            {3156, 34},
            {3167, 34},
            {3178, 34},
            {3189, 34},
            {3200, 34},
            {3213, 34},
            {3223, 34},
            {3234, 34},
            {3245, 34},
            {3256, 34},
            {3267, 34},
            {3278, 34},
            {3289, 34},
            {3300, 34},
            {3311, 34},
            {3324, 34},
            {3334, 34},
            {3345, 34},
            {3356, 34},
            {3367, 34},
            {3378, 34},
            {3389, 34},
            {3400, 34},
            {3411, 34},
            {3422, 34},
            {3435, 34},
            {3445, 34},
            {3456, 34},
            {3467, 34},
            {3478, 34},
            {3489, 34},
            {3500, 34},
            {3511, 34},
            {3522, 34},
            {3533, 34},
            {3581, 2969},
            {3582, 2954},
            {3582, 2956},
            {3582, 2958},
            {3591, 3584},
            {3596, 2954},
            {3596, 2956},
            {3596, 2958},
            {3613, 2954},
            {3613, 2956},
            {3613, 2958},
            {3616, 4678},
            {3623, 4678},
            {3629, 2954},
            {3629, 2956},
            {3629, 2958},
            {3645, 34},
            {3707, 34},
            {3717, 34},
            {3728, 34},
            {3739, 34},
            {3750, 34},
            {3761, 34},
            {3772, 34},
            {3783, 34},
            {3794, 34},
            {3805, 34},
            {3816, 34},
            {3827, 34},
            {3838, 34},
            {3849, 34},
            {3860, 34},
            {3871, 34},
            {3882, 34},
            {3893, 34},
            {3904, 34},
            {3916, 34},
            {3926, 34},
            {3937, 34},
            {3948, 34},
            {3959, 34},
            {3970, 34},
            {3981, 34},
            {3992, 34},
            {4003, 34},
            {4014, 34},
            {4026, 34},
            {4036, 34},
            {4047, 34},
            {4058, 34},
            {4069, 34},
            {4080, 34},
            {4091, 34},
            {4102, 34},
            {4113, 34},
            {4124, 34},
            {4136, 34},
            {4146, 34},
            {4157, 34},
            {4168, 34},
            {4179, 34},
            {4190, 34},
            {4201, 34},
            {4212, 34},
            {4223, 34},
            {4234, 34},
            {4302, 3665},
            {4303, 3649},
            {4303, 3651},
            {4303, 3653},
            {4312, 4305},
            {4317, 3649},
            {4317, 3651},
            {4317, 3653},
            {4320, 4677},
            {4336, 4677},
            {4339, 3649},
            {4339, 3651},
            {4339, 3653},
            {4347, 3649},
            {4347, 3651},
            {4347, 3653},
            {4389, 4672},
            {4393, 4673},
            {4397, 34},
            {4398, 34},
            {4402, 34},
            {4403, 34},
            {4404, 34},
            {4405, 34},
            {4413, 34},
            {4414, 34},
            {4429, 4370},
            {4449, 4672},
            {4454, 4675},
            {4460, 4674},
            {4465, 4673},
            {4472, 4676},
            {4474, 4676},
            {4481, 4676},
            {4486, 4671},
            {4491, 4676},
            {4493, 4671},
            {4502, 4676},
            {4505, 4674},
            {4509, 4675},
            {4514, 4675},
            {4522, 4370},
            {4529, 4524},
            {4536, 4526},
            {4538, 4672},
            {4540, 4675},
            {4542, 4674},
            {4545, 4670},
            {4546, 4670},
            {4547, 4673},
            {4550, 4669},
            {4551, 4669},
            {4552, 4676},
            {4558, 4676},
            {4566, 4370},
            {4570, 34},
            {4571, 34},
            {4573, 34},
            {4574, 34},
            {4576, 4676},
            {4580, 34},
            {4581, 34},
            {4582, 4676},
            {4585, 34},
            {4586, 34},
            {4587, 4676},
            {4592, 4673},
            {4596, 34},
            {4597, 34},
            {4599, 34},
            {4600, 34},
            {4604, 34},
            {4605, 34},
            {4607, 34},
            {4608, 34},
            {4611, 34},
            {4612, 34},
            {4616, 4370},
            {4618, 34},
            {4619, 34},
            {4621, 4674},
            {4625, 34},
            {4626, 34},
            {4627, 4675},
            {4633, 4674},
            {4637, 34},
            {4638, 34},
            {4639, 4675},
            {4663, 4670},
            {4666, 4669}
		};

		const unsigned int graph_size = 631;
	
	public:
		inline const std::vector<EdgeT>& getGraph() const {
			return graph;
		}

		inline const std::map<PtrDataT, NodeIdT>& getNodeMap() const {
			return node_map;
		}

		inline unsigned int getGraphSize() const {
			return graph_size;
		}
	};
} // namespace PointerGraph

#endif // PTA_GRAPHS_HPP
