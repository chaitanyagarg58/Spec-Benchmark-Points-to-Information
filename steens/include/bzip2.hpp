#ifndef PTA_GRAPHS_HPP
#define PTA_GRAPHS_HPP

#include "lhf/lhf.hpp"
#include <map>
#include <vector>
#include <string>

namespace PTA{

    using FuncDataT = std::string;

    struct PtrDataT {
        std::string var;
        std::string scope;
        std::string line;

        bool operator<(const PtrDataT& rhs) const {
            return std::tie(var, scope, line) < std::tie(rhs.var, rhs.scope, rhs.line);
        }
    };
    using NodeIdT = unsigned int;
    using EdgeT = std::pair<NodeIdT, NodeIdT>;

    enum IndexType {
        NODE_FOREST = 1,
        EDGE_FOREST = 2,
    };


    template<typename NodeDataT, typename DerivedGraphT>
    class BaseGraphAPI {
    protected:
        using NodePropertyT = unsigned int;
        using EdgePropertyT = long long;

        using NodeHashForest = lhf::LatticeHashForest<NodePropertyT>;
        using EdgeHashForest = lhf::LatticeHashForest<EdgePropertyT>;
    
        EdgeHashForest edgeForest;
        NodeHashForest nodeForest;
    
        inline const std::vector<EdgeT>& getGraph() const {
            return static_cast<const DerivedGraphT*>(this)->getGraph();
        }

        inline const std::map<NodeDataT, NodeIdT>& getNodeMap() const {
            return static_cast<const DerivedGraphT*>(this)->getNodeMap();
        }
    
        EdgePropertyT getEdgeProperty(const EdgeT& edge) const {
            const std::vector<EdgeT>& graph = getGraph();
            if (std::find(graph.begin(), graph.end(), edge) == graph.end()) {
                throw std::out_of_range("Invalid Edge");
            }
            EdgePropertyT property = (static_cast<EdgePropertyT>(edge.first) << 32) | static_cast<EdgePropertyT>(edge.second);
            return property;
        }
    
        EdgeT getEdge(const EdgePropertyT& edge_property) const {
            NodeIdT src = static_cast<NodeIdT>(edge_property >> 32);
            NodeIdT dst = static_cast<NodeIdT>(edge_property & 0xFFFFFFFF);
            return {src, dst};
        }
    
    public:
        inline NodeIdT getNodeId(const NodeDataT& node) const {
            auto it = getNodeMap().find(node);
            return (it != getNodeMap().end()) ? it->second : -1;
        }

        inline const NodeDataT& getNodeDetails(NodeIdT node_id) const {
            for (const auto& [node, nodeId] : getNodeMap()) {
                if (nodeId == node_id) {
                    return node;
                }
            }
            throw std::out_of_range("NodeID not found in node_map");
        }

        inline lhf::Index getEmptySetIndex() const {
            return lhf::EMPTY_SET;
        }
    
        inline bool is_empty(lhf::Index i) {
            return edgeForest.is_empty(i);
        }
    
        inline bool is_subset(IndexType indexType, lhf::Index a, lhf::Index b) {
            if (indexType == EDGE_FOREST) {
                return edgeForest.is_subset(a, b) == EdgeHashForest::SubsetRelation::SUBSET;
            } else if (indexType == NODE_FOREST) {
                return nodeForest.is_subset(a, b) == NodeHashForest::SubsetRelation::SUBSET;
            }
            throw std::invalid_argument("Invalid index type");
        }

        inline bool is_superset(IndexType indexType, lhf::Index a, lhf::Index b) {
            if (indexType == EDGE_FOREST) {
                return edgeForest.is_subset(a, b) == EdgeHashForest::SubsetRelation::SUPERSET;
            } else if (indexType == NODE_FOREST) {
                return nodeForest.is_subset(a, b) == NodeHashForest::SubsetRelation::SUPERSET;
            }
            throw std::invalid_argument("Invalid index type");
        }
    
        inline lhf::Index getEdgeIndex(const EdgeT& edge) {
            return edgeForest.register_set_single(getEdgeProperty(edge));
        }
    
        inline lhf::Index getEdgeIndex(const EdgeT& edge, bool &cold) {
            return edgeForest.register_set_single(getEdgeProperty(edge), cold);
        }
    
        inline const EdgeHashForest::PropertySet &get_value_edge(lhf::Index idx) const {
            return edgeForest.get_value(idx);
        }

        inline const NodeHashForest::PropertySet &get_value_node(lhf::Index idx) const {
            return nodeForest.get_value(idx);
        }
    
        inline std::size_t size_of(IndexType indexType, lhf::Index idx) const {
            if (indexType == EDGE_FOREST) {
                return edgeForest.size_of(idx);
            } else if (indexType == NODE_FOREST) {
                return nodeForest.size_of(idx);
            }
            throw std::invalid_argument("Invalid index type");
        }
    
        inline bool contains(lhf::Index idx, const EdgeT& edge) const {
            return edgeForest.contains(idx, getEdgeProperty(edge));
        }

        inline bool contains(lhf::Index idx, const NodeIdT& node) const {
            return nodeForest.contains(idx, node);
        }
    
        inline lhf::Index set_union(IndexType indexType, lhf::Index a, lhf::Index b) {
            if (indexType == EDGE_FOREST) {
                return edgeForest.set_union(a, b);
            } else if (indexType == NODE_FOREST) {
                return nodeForest.set_union(a, b);
            }
            throw std::invalid_argument("Invalid index type");
        }
    
        inline lhf::Index set_insert_single(lhf::Index a, const EdgeT& edge) {
            return edgeForest.set_insert_single(a, getEdgeProperty(edge));
        }

        inline lhf::Index set_insert_single(lhf::Index a, const NodeIdT& node) {
            return nodeForest.set_insert_single(a, node);
        }
    
        inline lhf::Index set_remove_single(lhf::Index a, const EdgeT& edge) {
            return edgeForest.set_remove_single(a, getEdgeProperty(edge));
        }

        inline lhf::Index set_remove_single(lhf::Index a, const NodeIdT& node) {
            return nodeForest.set_remove_single(a, node);
        }
    
        inline lhf::Index set_difference(IndexType indexType, lhf::Index a, lhf::Index b) {
            if (indexType == EDGE_FOREST) {
                return edgeForest.set_difference(a, b);
            } else if (indexType == NODE_FOREST) {
                return nodeForest.set_difference(a, b);
            }
            throw std::invalid_argument("Invalid index type");
        }
    
        inline lhf::Index set_intersection(IndexType indexType, lhf::Index a, lhf::Index b) {
            if (indexType == EDGE_FOREST) {
                return edgeForest.set_intersection(a, b);
            } else if (indexType == NODE_FOREST) {
                return nodeForest.set_intersection(a, b);
            }
            throw std::invalid_argument("Invalid index type");
        }
    
        inline const NodeHashForest::PropertySet& get_value_points_to(lhf::Index idx) const {
            return nodeForest.get_value(idx);
        }
    
        lhf::Index get_points_to_set(lhf::Index a, NodeIdT node_id) {
            EdgeHashForest::PropertySet property_set = edgeForest.get_value(a);
            std::vector<NodeIdT> result;
            for (EdgePropertyT property : property_set) {
                EdgeT edge = getEdge(property);
                if (edge.first == node_id) {
                    result.push_back(edge.second);
                }
            }
            return nodeForest.register_set(result);
        }
    
        lhf::Index get_points_to_set(lhf::Index a, const std::vector<NodeIdT>& node_ids) {
            lhf::Index result = getEmptySetIndex();
            for (NodeIdT node_id : node_ids) {
                lhf::Index index = get_points_to_set(a, node_id);
                result = nodeForest.set_union(result, index);
            }
            return result;
        }
    
        lhf::Index get_points_to_set(lhf::Index a, lhf::Index idx) {
            return get_points_to_set(a, get_value_points_to(idx));
        }
    
        lhf::Index get_points_to_set(lhf::Index a, NodeIdT node_id, unsigned int recursion_depth) {
            if (recursion_depth == 0) return {};
            lhf::Index result = get_points_to_set(a, node_id);
            for (int i = 1; i < recursion_depth; i++) {
                result = get_points_to_set(a, result);
                if (nodeForest.is_empty(result)) break;
            }
            return result;
        }
    
        lhf::Index get_points_to_set(lhf::Index a, const std::vector<NodeIdT>& node_ids, unsigned int recursion_depth) {
            if (recursion_depth == 0) return {};
            lhf::Index result = get_points_to_set(a, node_ids);
            for (int i = 1; i < recursion_depth; i++) {
                result = get_points_to_set(a, result);
                if (nodeForest.is_empty(result)) break;
            }
            return result;
        }
    
        void print_points_to_set(lhf::Index idx) const {
            const auto& set = nodeForest.get_value(idx);
            std::cout << "Points-to set (Index = " << idx << "): (";
            for (const auto& v : set) std::cout << v << ", ";
            std::cout << ")" << std::endl;
        }
    };


    class CallGraph : public BaseGraphAPI<FuncDataT, CallGraph> {
    private:
        // Mapping from NodeData to ID
        const std::map<FuncDataT, NodeIdT> node_map = {
            {"ran", 0},
            {"spec_init", 1},
            {"spec_random_load", 2},
            {"spec_load", 3},
            {"spec_read", 4},
            {"spec_fread", 5},
            {"spec_getc", 6},
            {"spec_ungetc", 7},
            {"spec_rewind", 8},
            {"spec_reset", 9},
            {"spec_write", 10},
            {"spec_fwrite", 11},
            {"spec_putc", 12},
            {"main", 13},
            {"debug_time", 14},
            {"spec_initbufs", 15},
            {"spec_compress", 16},
            {"spec_uncompress", 17},
            {"BZ2_blockSort", 18},
            {"fallbackSort", 19},
            {"mainSort", 20},
            {"mainQSort3", 21},
            {"mainSimpleSort", 22},
            {"mmed3", 23},
            {"mainGtU", 24},
            {"fallbackQSort3", 25},
            {"fallbackSimpleSort", 26},
            {"compressStream", 27},
            {"myfeof", 28},
            {"uInt64_from_UInt32s", 29},
            {"uInt64_to_double", 30},
            {"uInt64_toAscii", 31},
            {"configError", 32},
            {"outOfMemory", 33},
            {"ioError", 34},
            {"panic", 35},
            {"showFileNames", 36},
            {"cleanUpAndFail", 37},
            {"setExit", 38},
            {"uInt64_qrm10", 39},
            {"uInt64_isZero", 40},
            {"uncompressStream", 41},
            {"crcError", 42},
            {"compressedStreamEOF", 43},
            {"cadvise", 44},
            {"BZ2_bz__AssertH__fail", 45},
            {"BZ2_bzlibVersion", 46},
            {"BZ2_bzCompressInit", 47},
            {"bz_config_ok", 48},
            {"default_bzalloc", 49},
            {"default_bzfree", 50},
            {"init_RL", 51},
            {"prepare_new_block", 52},
            {"BZ2_bzCompress", 53},
            {"handle_compress", 54},
            {"isempty_RL", 55},
            {"copy_output_until_stop", 56},
            {"copy_input_until_stop", 57},
            {"flush_RL", 58},
            {"add_pair_to_block", 59},
            {"BZ2_bzCompressEnd", 60},
            {"BZ2_bzDecompressInit", 61},
            {"BZ2_indexIntoF", 62},
            {"BZ2_bzDecompress", 63},
            {"unRLE_obuf_to_output_SMALL", 64},
            {"unRLE_obuf_to_output_FAST", 65},
            {"BZ2_bzDecompressEnd", 66},
            {"BZ2_bzWriteOpen", 67},
            {"BZ2_bzWrite", 68},
            {"BZ2_bzWriteClose", 69},
            {"BZ2_bzWriteClose64", 70},
            {"BZ2_bzReadOpen", 71},
            {"BZ2_bzReadClose", 72},
            {"BZ2_bzRead", 73},
            {"myfeof.93", 74},
            {"BZ2_bzReadGetUnused", 75},
            {"BZ2_bzBuffToBuffCompress", 76},
            {"BZ2_bzBuffToBuffDecompress", 77},
            {"BZ2_bzopen", 78},
            {"bzopen_or_bzdopen", 79},
            {"BZ2_bzdopen", 80},
            {"BZ2_bzread", 81},
            {"BZ2_bzwrite", 82},
            {"BZ2_bzflush", 83},
            {"BZ2_bzclose", 84},
            {"BZ2_bzerror", 85},
            {"BZ2_bsInitWrite", 86},
            {"BZ2_compressBlock", 87},
            {"bsPutUChar", 88},
            {"bsPutUInt32", 89},
            {"bsW", 90},
            {"generateMTFValues", 91},
            {"sendMTFValues", 92},
            {"bsFinishWrite", 93},
            {"makeMaps_e", 94},
            {"BZ2_decompress", 95},
            {"makeMaps_d", 96},
            {"BZ2_hbMakeCodeLengths", 97},
            {"BZ2_hbAssignCodes", 98},
            {"BZ2_hbCreateDecodeTables", 99},
            {"__ctype_b_loc", 100},
            {"__errno_location", 101},
            {"llvm.dbg.value", 102},
            {"printf", 103},
            {"malloc", 104},
            {"exit", 105},
            {"llvm.dbg.declare", 106},
            {"open", 107},
            {"strerror", 108},
            {"fprintf", 109},
            {"read", 110},
            {"close", 111},
            {"atoi", 112},
            {"llvm.dbg.label", 113},
            {"perror", 114},
            {"llvm.fmuladd.f64", 115},
            {"free", 116},
            {"strcat", 117},
            {"strcmp", 118},
            {"llvm.memset.p0.i64", 119},
            {"llvm.memcpy.p0.p0.i64", 120}
        };

        // Graph Representation: Vector of (caller, callee) pairs
        const std::vector<EdgeT> graph = {
            {1, 104},
            {1, 105},
            {1, 103},
            {1, 119},
            {2, 0},
            {2, 120},
            {2, 103},
            {3, 101},
            {3, 103},
            {3, 105},
            {3, 107},
            {3, 108},
            {3, 109},
            {3, 110},
            {3, 111},
            {3, 120},
            {4, 120},
            {4, 105},
            {4, 109},
            {4, 103},
            {5, 120},
            {5, 105},
            {5, 109},
            {5, 103},
            {6, 105},
            {6, 109},
            {6, 103},
            {7, 105},
            {7, 109},
            {7, 103},
            {9, 119},
            {10, 120},
            {10, 105},
            {10, 109},
            {10, 103},
            {11, 120},
            {11, 105},
            {11, 109},
            {11, 103},
            {12, 105},
            {12, 109},
            {12, 103},
            {13, 1},
            {13, 3},
            {13, 103},
            {13, 8},
            {13, 105},
            {13, 9},
            {13, 104},
            {13, 14},
            {13, 15},
            {13, 112},
            {13, 16},
            {13, 17},
            {16, 27},
            {17, 41},
            {18, 109},
            {18, 19},
            {18, 20},
            {18, 45},
            {19, 25},
            {19, 109},
            {19, 45},
            {20, 21},
            {20, 45},
            {20, 109},
            {21, 45},
            {21, 22},
            {21, 23},
            {22, 24},
            {25, 26},
            {25, 45},
            {27, 32},
            {27, 33},
            {27, 34},
            {27, 67},
            {27, 35},
            {27, 5},
            {27, 70},
            {27, 68},
            {27, 109},
            {27, 28},
            {27, 29},
            {27, 30},
            {27, 31},
            {28, 6},
            {28, 7},
            {30, 115},
            {31, 120},
            {31, 40},
            {31, 39},
            {32, 105},
            {32, 109},
            {32, 38},
            {33, 37},
            {33, 36},
            {33, 109},
            {34, 114},
            {34, 109},
            {34, 36},
            {34, 37},
            {35, 37},
            {35, 36},
            {35, 109},
            {36, 109},
            {37, 105},
            {37, 38},
            {41, 32},
            {41, 33},
            {41, 34},
            {41, 35},
            {41, 5},
            {41, 71},
            {41, 72},
            {41, 73},
            {41, 8},
            {41, 11},
            {41, 75},
            {41, 109},
            {41, 42},
            {41, 43},
            {41, 28},
            {42, 109},
            {42, 44},
            {42, 37},
            {42, 36},
            {43, 36},
            {43, 37},
            {43, 44},
            {43, 109},
            {43, 114},
            {44, 109},
            {45, 105},
            {45, 109},
            {45, 46},
            {47, 48},
            {47, 51},
            {47, 52},
            {49, 104},
            {50, 116},
            {53, 54},
            {53, 55},
            {54, 52},
            {54, 87},
            {54, 55},
            {54, 56},
            {54, 57},
            {54, 58},
            {57, 59},
            {58, 59},
            {58, 51},
            {60, 50},
            {61, 48},
            {63, 64},
            {63, 65},
            {63, 109},
            {63, 95},
            {64, 62},
            {66, 50},
            {67, 104},
            {67, 116},
            {67, 47},
            {68, 11},
            {68, 53},
            {69, 70},
            {70, 116},
            {70, 11},
            {70, 60},
            {70, 53},
            {71, 104},
            {71, 116},
            {71, 61},
            {72, 66},
            {72, 116},
            {73, 74},
            {73, 5},
            {73, 63},
            {74, 6},
            {74, 7},
            {76, 60},
            {76, 53},
            {76, 47},
            {77, 66},
            {77, 61},
            {77, 63},
            {78, 79},
            {79, 67},
            {79, 100},
            {79, 71},
            {79, 117},
            {79, 118},
            {79, 119},
            {80, 79},
            {81, 73},
            {82, 68},
            {84, 72},
            {84, 69},
            {87, 109},
            {87, 18},
            {87, 86},
            {87, 88},
            {87, 89},
            {87, 90},
            {87, 91},
            {87, 92},
            {87, 93},
            {88, 90},
            {89, 90},
            {91, 94},
            {92, 97},
            {92, 98},
            {92, 109},
            {92, 45},
            {92, 90},
            {95, 96},
            {95, 99},
            {95, 45},
            {95, 109},
            {95, 62},
            {97, 45},
            {100, 104},
            {101, 104}
        };

        const unsigned int graph_size = 222;
    
    public:
        inline const std::vector<EdgeT>& getGraph() const {
            return graph;
        }

        inline const std::map<FuncDataT, NodeIdT>& getNodeMap() const {
            return node_map;
        }

        inline unsigned int getGraphSize() const {
            return graph_size;
        }
    };


    class PointerGraph : public BaseGraphAPI<PtrDataT, PointerGraph> {
    private:
        // Mapping from NodeData to ID
        const std::map<PtrDataT, NodeIdT> node_map = {
            {{"spec_fd", "spec.c", "50"}, 22},
            {{"incs", "blocksort.c", "527"}, 66},
            {{"progName", "bzip2.c", "307"}, 91},
            {{"bzerrorstrings", "bzlib.c", "1637"}, 149},
            {{"BZ2_crc32Table", "crctable.c", "71"}, 166},
            {{"BZ2_rNums", "randtable.c", "66"}, 172},
            {{"arrayidx", "spec.c", "88"}, 230},
            {{"limit2", "spec.c", "88"}, 231},
            {{"arrayidx4", "spec.c", "89"}, 235},
            {{"i2", "spec.c", "89"}, 236},
            {{"arrayidx6", "spec.c", "90"}, 243},
            {{"limit7", "spec.c", "90"}, 244},
            {{"call8", "spec.c", "91"}, 250},
            {{"arrayidx10", "spec.c", "91"}, 254},
            {{"buf", "spec.c", "91"}, 255},
            {{"arrayidx12", "spec.c", "92"}, 258},
            {{"buf13", "spec.c", "92"}, 259},
            {{"i3", "spec.c", "92"}, 260},
            {{"arrayidx24", "spec.c", "97"}, 277},
            {{"buf25", "spec.c", "97"}, 278},
            {{"random_text", "spec.c", "111"}, 305},
            {{"arrayidx", "spec.c", "117"}, 345},
            {{"arrayidx12", "spec.c", "117"}, 347},
            {{"arrayidx23", "spec.c", "123"}, 370},
            {{"limit", "spec.c", "123"}, 371},
            {{"arrayidx28", "spec.c", "124"}, 376},
            {{"buf", "spec.c", "124"}, 377},
            {{"arrayidx33", "spec.c", "124"}, 386},
            {{"arraydecay", "spec.c", "124"}, 387},
            {{"arrayidx37", "spec.c", "128"}, 397},
            {{"len", "spec.c", "128"}, 398},
            {{"call1", "spec.c", "140"}, 423},
            {{"arrayidx", "spec.c", "143"}, 438},
            {{"len", "spec.c", "143"}, 439},
            {{"arrayidx5", "spec.c", "143"}, 442},
            {{"pos", "spec.c", "143"}, 443},
            {{"arrayidx8", "spec.c", "145"}, 455},
            {{"buf", "spec.c", "145"}, 456},
            {{"call17", "spec.c", "148"}, 472},
            {{"arrayidx22", "spec.c", "151"}, 480},
            {{"len23", "spec.c", "151"}, 481},
            {{"arrayidx27", "spec.c", "154"}, 495},
            {{"len28", "spec.c", "154"}, 496},
            {{"arrayidx32", "spec.c", "155"}, 501},
            {{"len33", "spec.c", "155"}, 502},
            {{"arrayidx35", "spec.c", "156"}, 507},
            {{"len36", "spec.c", "156"}, 508},
            {{"arrayidx41", "spec.c", "156"}, 513},
            {{"len42", "spec.c", "156"}, 514},
            {{"arrayidx50", "spec.c", "158"}, 528},
            {{"buf51", "spec.c", "158"}, 529},
            {{"arrayidx53", "spec.c", "158"}, 532},
            {{"len54", "spec.c", "158"}, 533},
            {{"arrayidx58", "spec.c", "158"}, 538},
            {{"buf59", "spec.c", "158"}, 539},
            {{"arrayidx62", "spec.c", "159"}, 544},
            {{"len63", "spec.c", "159"}, 545},
            {{"arrayidx", "spec.c", "171"}, 591},
            {{"pos", "spec.c", "171"}, 592},
            {{"arrayidx6", "spec.c", "171"}, 595},
            {{"len", "spec.c", "171"}, 596},
            {{"arrayidx15", "spec.c", "175"}, 609},
            {{"pos16", "spec.c", "175"}, 610},
            {{"arrayidx18", "spec.c", "175"}, 614},
            {{"len19", "spec.c", "175"}, 615},
            {{"arrayidx23", "spec.c", "176"}, 620},
            {{"len24", "spec.c", "176"}, 621},
            {{"arrayidx26", "spec.c", "176"}, 624},
            {{"pos27", "spec.c", "176"}, 625},
            {{"arrayidx30", "spec.c", "180"}, 636},
            {{"buf31", "spec.c", "180"}, 637},
            {{"arrayidx33", "spec.c", "180"}, 640},
            {{"pos34", "spec.c", "180"}, 641},
            {{"arrayidx38", "spec.c", "181"}, 648},
            {{"pos39", "spec.c", "181"}, 649},
            {{"buf", "spec.c", "185"}, 666},
            {{"arrayidx", "spec.c", "192"}, 688},
            {{"pos", "spec.c", "192"}, 689},
            {{"arrayidx6", "spec.c", "192"}, 692},
            {{"len", "spec.c", "192"}, 693},
            {{"arrayidx15", "spec.c", "196"}, 706},
            {{"pos16", "spec.c", "196"}, 707},
            {{"arrayidx18", "spec.c", "196"}, 712},
            {{"len19", "spec.c", "196"}, 713},
            {{"arrayidx23", "spec.c", "197"}, 718},
            {{"len24", "spec.c", "197"}, 719},
            {{"arrayidx26", "spec.c", "197"}, 722},
            {{"pos27", "spec.c", "197"}, 723},
            {{"arrayidx30", "spec.c", "201"}, 735},
            {{"buf31", "spec.c", "201"}, 736},
            {{"arrayidx33", "spec.c", "201"}, 739},
            {{"pos34", "spec.c", "201"}, 740},
            {{"arrayidx39", "spec.c", "202"}, 748},
            {{"pos40", "spec.c", "202"}, 749},
            {{"arrayidx", "spec.c", "213"}, 782},
            {{"pos", "spec.c", "213"}, 783},
            {{"arrayidx6", "spec.c", "213"}, 786},
            {{"len", "spec.c", "213"}, 787},
            {{"arrayidx15", "spec.c", "217"}, 800},
            {{"buf", "spec.c", "217"}, 801},
            {{"arrayidx17", "spec.c", "217"}, 804},
            {{"pos18", "spec.c", "217"}, 805},
            {{"arrayidx", "spec.c", "228"}, 845},
            {{"pos", "spec.c", "228"}, 846},
            {{"arrayidx8", "spec.c", "229"}, 852},
            {{"pos9", "spec.c", "229"}, 853},
            {{"arrayidx13", "spec.c", "232"}, 859},
            {{"buf", "spec.c", "232"}, 860},
            {{"arrayidx15", "spec.c", "232"}, 863},
            {{"pos16", "spec.c", "232"}, 864},
            {{"arrayidx", "spec.c", "240"}, 894},
            {{"pos", "spec.c", "240"}, 895},
            {{"arrayidx", "spec.c", "244"}, 904},
            {{"buf", "spec.c", "244"}, 905},
            {{"arrayidx2", "spec.c", "244"}, 908},
            {{"len", "spec.c", "244"}, 909},
            {{"arrayidx4", "spec.c", "245"}, 914},
            {{"len5", "spec.c", "245"}, 915},
            {{"arrayidx7", "spec.c", "245"}, 918},
            {{"pos", "spec.c", "245"}, 919},
            {{"arrayidx", "spec.c", "255"}, 944},
            {{"buf5", "spec.c", "255"}, 945},
            {{"arrayidx7", "spec.c", "255"}, 948},
            {{"pos", "spec.c", "255"}, 949},
            {{"arrayidx11", "spec.c", "256"}, 956},
            {{"len", "spec.c", "256"}, 957},
            {{"arrayidx13", "spec.c", "257"}, 962},
            {{"pos14", "spec.c", "257"}, 963},
            {{"buf", "spec.c", "261"}, 977},
            {{"arrayidx", "spec.c", "267"}, 998},
            {{"buf5", "spec.c", "267"}, 999},
            {{"arrayidx7", "spec.c", "267"}, 1002},
            {{"pos", "spec.c", "267"}, 1003},
            {{"arrayidx12", "spec.c", "268"}, 1012},
            {{"len", "spec.c", "268"}, 1013},
            {{"arrayidx15", "spec.c", "269"}, 1019},
            {{"pos16", "spec.c", "269"}, 1020},
            {{"arrayidx", "spec.c", "279"}, 1052},
            {{"buf", "spec.c", "279"}, 1053},
            {{"arrayidx7", "spec.c", "279"}, 1056},
            {{"pos", "spec.c", "279"}, 1057},
            {{"arrayidx11", "spec.c", "280"}, 1065},
            {{"len", "spec.c", "280"}, 1066},
            {{"call25", "spec.c", "310"}, 1150},
            {{"arrayidx38", "spec.c", "317"}, 1176},
            {{"arrayidx76", "spec.c", "368"}, 1245},
            {{"budget", "blocksort.c", "1087"}, 1320},
            {{"ftab", "blocksort.c", "265"}, 1478},
            {{"ftabCopy", "blocksort.c", "266"}, 1480},
            {{"arrayidx", "blocksort.c", "278"}, 1506},
            {{"arrayidx8", "blocksort.c", "279"}, 1524},
            {{"arrayidx17", "blocksort.c", "280"}, 1542},
            {{"arrayidx19", "blocksort.c", "280"}, 1545},
            {{"arrayidx27", "blocksort.c", "281"}, 1561},
            {{"arrayidx29", "blocksort.c", "281"}, 1564},
            {{"arrayidx39", "blocksort.c", "285"}, 1586},
            {{"arrayidx42", "blocksort.c", "286"}, 1591},
            {{"arrayidx63", "blocksort.c", "292"}, 1627},
            {{"arrayidx65", "blocksort.c", "292"}, 1633},
            {{"arrayidx279", "blocksort.c", "371"}, 1980},
            {{"arrayidx286", "blocksort.c", "372"}, 1987},
            {{"budget", "blocksort.c", "798"}, 2016},
            {{"runningOrder", "blocksort.c", "807"}, 2018},
            {{"bigDone", "blocksort.c", "808"}, 2020},
            {{"copyStart", "blocksort.c", "809"}, 2022},
            {{"copyEnd", "blocksort.c", "810"}, 2024},
            {{"arrayidx217", "blocksort.c", "885"}, 2388},
            {{"arrayidx219", "blocksort.c", "886"}, 2391},
            {{"arrayidx232", "blocksort.c", "896"}, 2424},
            {{"arrayidx235", "blocksort.c", "898"}, 2435},
            {{"arrayidx242", "blocksort.c", "898"}, 2444},
            {{"arrayidx259", "blocksort.c", "899"}, 2465},
            {{"arrayidx261", "blocksort.c", "899"}, 2468},
            {{"arrayidx269", "blocksort.c", "904"}, 2482},
            {{"arrayidx282", "blocksort.c", "923"}, 2505},
            {{"arrayidx330", "blocksort.c", "956"}, 2586},
            {{"arrayidx344", "blocksort.c", "967"}, 2609},
            {{"arrayidx353", "blocksort.c", "968"}, 2620},
            {{"arrayidx363", "blocksort.c", "970"}, 2638},
            {{"arrayidx378", "blocksort.c", "973"}, 2660},
            {{"arrayidx382", "blocksort.c", "974"}, 2665},
            {{"arrayidx398", "blocksort.c", "976"}, 2692},
            {{"arrayidx413", "blocksort.c", "979"}, 2714},
            {{"arrayidx417", "blocksort.c", "980"}, 2719},
            {{"arrayidx426", "blocksort.c", "984"}, 2733},
            {{"arrayidx429", "blocksort.c", "984"}, 2737},
            {{"arrayidx433", "blocksort.c", "984"}, 2742},
            {{"arrayidx437", "blocksort.c", "984"}, 2747},
            {{"arrayidx456", "blocksort.c", "1034"}, 2776},
            {{"budget", "blocksort.c", "668"}, 2873},
            {{"stackLo", "blocksort.c", "680"}, 2875},
            {{"stackHi", "blocksort.c", "681"}, 2877},
            {{"stackD", "blocksort.c", "682"}, 2879},
            {{"nextLo", "blocksort.c", "684"}, 2881},
            {{"nextHi", "blocksort.c", "685"}, 2883},
            {{"nextD", "blocksort.c", "686"}, 2885},
            {{"arrayidx", "blocksort.c", "689"}, 2902},
            {{"arrayidx2", "blocksort.c", "689"}, 2905},
            {{"arrayidx4", "blocksort.c", "689"}, 2908},
            {{"arrayidx7", "blocksort.c", "695"}, 2929},
            {{"arrayidx9", "blocksort.c", "695"}, 2933},
            {{"arrayidx11", "blocksort.c", "695"}, 2937},
            {{"arrayidx122", "blocksort.c", "739"}, 3115},
            {{"arrayidx124", "blocksort.c", "739"}, 3118},
            {{"arrayidx127", "blocksort.c", "739"}, 3122},
            {{"arrayidx192", "blocksort.c", "749"}, 3225},
            {{"arrayidx193", "blocksort.c", "749"}, 3227},
            {{"arrayidx194", "blocksort.c", "749"}, 3229},
            {{"arrayidx195", "blocksort.c", "750"}, 3231},
            {{"arrayidx196", "blocksort.c", "750"}, 3233},
            {{"arrayidx197", "blocksort.c", "750"}, 3235},
            {{"arrayidx199", "blocksort.c", "751"}, 3238},
            {{"arrayidx201", "blocksort.c", "751"}, 3241},
            {{"arrayidx203", "blocksort.c", "751"}, 3244},
            {{"arrayidx204", "blocksort.c", "753"}, 3246},
            {{"arrayidx205", "blocksort.c", "753"}, 3248},
            {{"arrayidx207", "blocksort.c", "753"}, 3251},
            {{"arrayidx208", "blocksort.c", "753"}, 3253},
            {{"arrayidx213", "blocksort.c", "753"}, 3258},
            {{"arrayidx214", "blocksort.c", "753"}, 3261},
            {{"arrayidx215", "blocksort.c", "753"}, 3263},
            {{"arrayidx216", "blocksort.c", "753"}, 3265},
            {{"arrayidx217", "blocksort.c", "753"}, 3267},
            {{"arrayidx218", "blocksort.c", "753"}, 3270},
            {{"arrayidx219", "blocksort.c", "753"}, 3272},
            {{"arrayidx220", "blocksort.c", "753"}, 3274},
            {{"arrayidx221", "blocksort.c", "753"}, 3276},
            {{"arrayidx222", "blocksort.c", "753"}, 3279},
            {{"arrayidx223", "blocksort.c", "753"}, 3281},
            {{"arrayidx224", "blocksort.c", "753"}, 3283},
            {{"arrayidx226", "blocksort.c", "754"}, 3287},
            {{"arrayidx227", "blocksort.c", "754"}, 3289},
            {{"arrayidx229", "blocksort.c", "754"}, 3292},
            {{"arrayidx230", "blocksort.c", "754"}, 3294},
            {{"arrayidx236", "blocksort.c", "754"}, 3299},
            {{"arrayidx237", "blocksort.c", "754"}, 3302},
            {{"arrayidx238", "blocksort.c", "754"}, 3304},
            {{"arrayidx239", "blocksort.c", "754"}, 3306},
            {{"arrayidx240", "blocksort.c", "754"}, 3308},
            {{"arrayidx241", "blocksort.c", "754"}, 3311},
            {{"arrayidx242", "blocksort.c", "754"}, 3313},
            {{"arrayidx243", "blocksort.c", "754"}, 3315},
            {{"arrayidx244", "blocksort.c", "754"}, 3317},
            {{"arrayidx245", "blocksort.c", "754"}, 3320},
            {{"arrayidx246", "blocksort.c", "754"}, 3322},
            {{"arrayidx247", "blocksort.c", "754"}, 3324},
            {{"arrayidx249", "blocksort.c", "755"}, 3328},
            {{"arrayidx250", "blocksort.c", "755"}, 3330},
            {{"arrayidx252", "blocksort.c", "755"}, 3333},
            {{"arrayidx253", "blocksort.c", "755"}, 3335},
            {{"arrayidx259", "blocksort.c", "755"}, 3340},
            {{"arrayidx260", "blocksort.c", "755"}, 3343},
            {{"arrayidx261", "blocksort.c", "755"}, 3345},
            {{"arrayidx262", "blocksort.c", "755"}, 3347},
            {{"arrayidx263", "blocksort.c", "755"}, 3349},
            {{"arrayidx264", "blocksort.c", "755"}, 3352},
            {{"arrayidx265", "blocksort.c", "755"}, 3354},
            {{"arrayidx266", "blocksort.c", "755"}, 3356},
            {{"arrayidx267", "blocksort.c", "755"}, 3358},
            {{"arrayidx268", "blocksort.c", "755"}, 3361},
            {{"arrayidx269", "blocksort.c", "755"}, 3363},
            {{"arrayidx270", "blocksort.c", "755"}, 3365},
            {{"arrayidx272", "blocksort.c", "760"}, 3369},
            {{"arrayidx274", "blocksort.c", "760"}, 3372},
            {{"arrayidx275", "blocksort.c", "760"}, 3374},
            {{"arrayidx277", "blocksort.c", "760"}, 3377},
            {{"arrayidx278", "blocksort.c", "760"}, 3379},
            {{"arrayidx280", "blocksort.c", "760"}, 3382},
            {{"arrayidx282", "blocksort.c", "761"}, 3386},
            {{"arrayidx284", "blocksort.c", "761"}, 3389},
            {{"arrayidx285", "blocksort.c", "761"}, 3391},
            {{"arrayidx287", "blocksort.c", "761"}, 3394},
            {{"arrayidx288", "blocksort.c", "761"}, 3396},
            {{"arrayidx290", "blocksort.c", "761"}, 3399},
            {{"arrayidx292", "blocksort.c", "762"}, 3403},
            {{"arrayidx294", "blocksort.c", "762"}, 3406},
            {{"arrayidx295", "blocksort.c", "762"}, 3408},
            {{"arrayidx297", "blocksort.c", "762"}, 3411},
            {{"arrayidx298", "blocksort.c", "762"}, 3413},
            {{"arrayidx300", "blocksort.c", "762"}, 3416},
            {{"budget", "blocksort.c", "532"}, 3429},
            {{"arrayidx", "blocksort.c", "548"}, 3452},
            {{"arrayidx4", "blocksort.c", "552"}, 3468},
            {{"budget", "blocksort.c", "394"}, 3667},
            {{"stackLo", "blocksort.c", "148"}, 4303},
            {{"stackHi", "blocksort.c", "149"}, 4305},
            {{"arrayidx", "blocksort.c", "154"}, 4315},
            {{"arrayidx2", "blocksort.c", "154"}, 4318},
            {{"arrayidx5", "blocksort.c", "160"}, 4341},
            {{"arrayidx7", "blocksort.c", "160"}, 4345},
            {{"arrayidx171", "blocksort.c", "220"}, 4631},
            {{"arrayidx173", "blocksort.c", "220"}, 4634},
            {{"arrayidx176", "blocksort.c", "221"}, 4639},
            {{"arrayidx178", "blocksort.c", "221"}, 4642},
            {{"arrayidx182", "blocksort.c", "223"}, 4649},
            {{"arrayidx184", "blocksort.c", "223"}, 4652},
            {{"arrayidx187", "blocksort.c", "224"}, 4657},
            {{"arrayidx189", "blocksort.c", "224"}, 4660},
            {{"ibuf", "bzip2.c", "442"}, 4802},
            {{"ibuf", "bzip2.c", "442"}, 4803},
            {{"nbytes_in_lo32", "bzip2.c", "444"}, 4805},
            {{"nbytes_in_hi32", "bzip2.c", "444"}, 4807},
            {{"nbytes_out_lo32", "bzip2.c", "445"}, 4809},
            {{"nbytes_out_hi32", "bzip2.c", "445"}, 4811},
            {{"bzerr", "bzip2.c", "446"}, 4812},
            {{"bzerr", "bzip2.c", "446"}, 4813},
            {{"bzerr_dummy", "bzip2.c", "446"}, 4814},
            {{"bzerr_dummy", "bzip2.c", "446"}, 4815},
            {{"buf_nin", "bzip2.c", "496"}, 4816},
            {{"buf_nin", "bzip2.c", "496"}, 4817},
            {{"buf_nout", "bzip2.c", "496"}, 4818},
            {{"buf_nout", "bzip2.c", "496"}, 4819},
            {{"nbytes_in", "bzip2.c", "497"}, 4820},
            {{"nbytes_in", "bzip2.c", "497"}, 4821},
            {{"nbytes_out", "bzip2.c", "497"}, 4822},
            {{"nbytes_out", "bzip2.c", "497"}, 4823},
            {{"call", "bzip2.c", "454"}, 4837},
            {{"arraydecay", "bzip2.c", "463"}, 4862},
            {{"arraydecay11", "bzip2.c", "465"}, 4868},
            {{"arraydecay39", "bzip2.c", "505"}, 4936},
            {{"arraydecay40", "bzip2.c", "506"}, 4940},
            {{"arraydecay44", "bzip2.c", "512"}, 4952},
            {{"arraydecay45", "bzip2.c", "513"}, 4953},
            {{"n", "bzip2.c", "340"}, 5001},
            {{"b", "bzip2.c", "342"}, 5011},
            {{"arrayidx", "bzip2.c", "342"}, 5012},
            {{"b4", "bzip2.c", "343"}, 5019},
            {{"arrayidx5", "bzip2.c", "343"}, 5020},
            {{"b9", "bzip2.c", "344"}, 5026},
            {{"arrayidx10", "bzip2.c", "344"}, 5027},
            {{"b13", "bzip2.c", "345"}, 5032},
            {{"arrayidx14", "bzip2.c", "345"}, 5033},
            {{"b18", "bzip2.c", "346"}, 5039},
            {{"arrayidx19", "bzip2.c", "346"}, 5040},
            {{"b23", "bzip2.c", "347"}, 5045},
            {{"arrayidx24", "bzip2.c", "347"}, 5046},
            {{"b28", "bzip2.c", "348"}, 5051},
            {{"arrayidx29", "bzip2.c", "348"}, 5052},
            {{"b32", "bzip2.c", "349"}, 5056},
            {{"arrayidx33", "bzip2.c", "349"}, 5057},
            {{"n", "bzip2.c", "354"}, 5061},
            {{"b", "bzip2.c", "360"}, 5080},
            {{"arrayidx", "bzip2.c", "360"}, 5082},
            {{"outbuf", "bzip2.c", "397"}, 5095},
            {{"n", "bzip2.c", "397"}, 5096},
            {{"buf", "bzip2.c", "400"}, 5098},
            {{"n_copy", "bzip2.c", "402"}, 5100},
            {{"i", "bzip2.c", "402"}, 5106},
            {{"i1", "bzip2.c", "402"}, 5107},
            {{"arrayidx", "bzip2.c", "405"}, 5123},
            {{"arrayidx3", "bzip2.c", "408"}, 5135},
            {{"arrayidx7", "bzip2.c", "410"}, 5148},
            {{"arrayidx9", "bzip2.c", "410"}, 5151},
            {{"i1", "bzip2.c", "1018"}, 5169},
            {{"i1", "bzip2.c", "934"}, 5180},
            {{"i2", "bzip2.c", "935"}, 5182},
            {{"i1", "bzip2.c", "891"}, 5193},
            {{"n", "bzip2.c", "379"}, 5223},
            {{"b", "bzip2.c", "385"}, 5238},
            {{"arrayidx", "bzip2.c", "385"}, 5240},
            {{"b2", "bzip2.c", "386"}, 5247},
            {{"arrayidx4", "bzip2.c", "386"}, 5249},
            {{"n", "bzip2.c", "368"}, 5258},
            {{"b", "bzip2.c", "372"}, 5268},
            {{"arrayidx", "bzip2.c", "372"}, 5270},
            {{"bzerr", "bzip2.c", "551"}, 5291},
            {{"bzerr", "bzip2.c", "551"}, 5292},
            {{"bzerr_dummy", "bzip2.c", "551"}, 5293},
            {{"bzerr_dummy", "bzip2.c", "551"}, 5294},
            {{"obuf", "bzip2.c", "552"}, 5295},
            {{"obuf", "bzip2.c", "552"}, 5296},
            {{"unused", "bzip2.c", "553"}, 5297},
            {{"unused", "bzip2.c", "553"}, 5298},
            {{"nUnused", "bzip2.c", "554"}, 5300},
            {{"unusedTmpV", "bzip2.c", "555"}, 5302},
            {{"arraydecay", "bzip2.c", "571"}, 5322},
            {{"call", "bzip2.c", "569"}, 5324},
            {{"arraydecay8", "bzip2.c", "577"}, 5341},
            {{"arraydecay22", "bzip2.c", "580"}, 5360},
            {{"i10", "bzip2.c", "588"}, 5378},
            {{"arrayidx", "bzip2.c", "589"}, 5390},
            {{"arrayidx36", "bzip2.c", "589"}, 5393},
            {{"arraydecay79", "bzip2.c", "623"}, 5461},
            {{"arraydecay84", "bzip2.c", "625"}, 5466},
            {{"i21", "bzip2.c", "659"}, 5514},
            {{"i1", "bzip2.c", "903"}, 5527},
            {{"i2", "bzip2.c", "918"}, 5540},
            {{"i3", "bzip2.c", "919"}, 5542},
            {{"strm", "bzlib.c", "205"}, 5580},
            {{"bzalloc", "bzlib.c", "222"}, 5614},
            {{"i", "bzlib.c", "222"}, 5615},
            {{"bzalloc15", "bzlib.c", "222"}, 5618},
            {{"default_bzalloc", "None", ""}, 5621},
            {{"bzfree", "bzlib.c", "223"}, 5624},
            {{"i1", "bzlib.c", "223"}, 5625},
            {{"bzfree19", "bzlib.c", "223"}, 5628},
            {{"default_bzfree", "None", ""}, 5631},
            {{"bzalloc21", "bzlib.c", "225"}, 5634},
            {{"i2", "bzlib.c", "225"}, 5635},
            {{"opaque", "bzlib.c", "225"}, 5636},
            {{"i3", "bzlib.c", "225"}, 5638},
            {{"i4", "bzlib.c", "225"}, 5641},
            {{"bzalloc27", "bzlib.c", "234"}, 5657},
            {{"i5", "bzlib.c", "234"}, 5658},
            {{"opaque28", "bzlib.c", "234"}, 5659},
            {{"i6", "bzlib.c", "234"}, 5660},
            {{"bzalloc33", "bzlib.c", "235"}, 5668},
            {{"i8", "bzlib.c", "235"}, 5669},
            {{"opaque34", "bzlib.c", "235"}, 5670},
            {{"i9", "bzlib.c", "235"}, 5671},
            {{"bzalloc40", "bzlib.c", "236"}, 5680},
            {{"i11", "bzlib.c", "236"}, 5681},
            {{"opaque41", "bzlib.c", "236"}, 5682},
            {{"i12", "bzlib.c", "236"}, 5683},
            {{"bzfree60", "bzlib.c", "239"}, 5705},
            {{"i18", "bzlib.c", "239"}, 5706},
            {{"opaque61", "bzlib.c", "239"}, 5707},
            {{"i19", "bzlib.c", "239"}, 5708},
            {{"bzfree68", "bzlib.c", "240"}, 5719},
            {{"i23", "bzlib.c", "240"}, 5720},
            {{"opaque69", "bzlib.c", "240"}, 5721},
            {{"i24", "bzlib.c", "240"}, 5722},
            {{"bzfree76", "bzlib.c", "241"}, 5733},
            {{"i28", "bzlib.c", "241"}, 5734},
            {{"opaque77", "bzlib.c", "241"}, 5735},
            {{"i29", "bzlib.c", "241"}, 5736},
            {{"bzfree83", "bzlib.c", "242"}, 5745},
            {{"i32", "bzlib.c", "242"}, 5746},
            {{"opaque84", "bzlib.c", "242"}, 5747},
            {{"i33", "bzlib.c", "242"}, 5748},
            {{"i40", "bzlib.c", "260"}, 5792},
            {{"state94", "bzlib.c", "260"}, 5793},
            {{"total_in_lo32", "bzlib.c", "261"}, 5795},
            {{"total_in_hi32", "bzlib.c", "262"}, 5797},
            {{"total_out_lo32", "bzlib.c", "263"}, 5799},
            {{"total_out_hi32", "bzlib.c", "264"}, 5801},
            {{"opaque", "bzlib.c", "166"}, 5831},
            {{"addr", "bzlib.c", "166"}, 5832},
            {{"nblock", "bzlib.c", "177"}, 5855},
            {{"strm", "bzlib.c", "464"}, 5891},
            {{"state", "bzlib.c", "469"}, 5899},
            {{"i", "bzlib.c", "469"}, 5900},
            {{"i1", "bzlib.c", "469"}, 5901},
            {{"avail_in", "bzlib.c", "486"}, 5931},
            {{"avail_in19", "bzlib.c", "492"}, 5940},
            {{"strm", "bzlib.c", "418"}, 6019},
            {{"state", "bzlib.c", "422"}, 6023},
            {{"i", "bzlib.c", "422"}, 6024},
            {{"state_in_ch", "bzlib.c", "198"}, 6164},
            {{"arrayidx", "bzlib.c", "359"}, 6307},
            {{"arrayidx99", "bzlib.c", "377"}, 6450},
            {{"arrayidx", "bzlib.c", "278"}, 6582},
            {{"strm", "bzlib.c", "525"}, 6741},
            {{"state", "bzlib.c", "529"}, 6747},
            {{"i", "bzlib.c", "529"}, 6748},
            {{"strm4", "bzlib.c", "531"}, 6754},
            {{"i2", "bzlib.c", "531"}, 6755},
            {{"bzfree", "bzlib.c", "533"}, 6763},
            {{"i4", "bzlib.c", "533"}, 6764},
            {{"opaque", "bzlib.c", "533"}, 6765},
            {{"i5", "bzlib.c", "533"}, 6766},
            {{"i6", "bzlib.c", "533"}, 6768},
            {{"i7", "bzlib.c", "533"}, 6769},
            {{"bzfree14", "bzlib.c", "534"}, 6777},
            {{"i9", "bzlib.c", "534"}, 6778},
            {{"opaque15", "bzlib.c", "534"}, 6779},
            {{"i10", "bzlib.c", "534"}, 6780},
            {{"i11", "bzlib.c", "534"}, 6782},
            {{"i12", "bzlib.c", "534"}, 6783},
            {{"bzfree20", "bzlib.c", "535"}, 6791},
            {{"i14", "bzlib.c", "535"}, 6792},
            {{"opaque21", "bzlib.c", "535"}, 6793},
            {{"i15", "bzlib.c", "535"}, 6794},
            {{"i16", "bzlib.c", "535"}, 6796},
            {{"i17", "bzlib.c", "535"}, 6797},
            {{"bzfree24", "bzlib.c", "536"}, 6801},
            {{"i18", "bzlib.c", "536"}, 6802},
            {{"opaque25", "bzlib.c", "536"}, 6803},
            {{"i19", "bzlib.c", "536"}, 6804},
            {{"state26", "bzlib.c", "536"}, 6805},
            {{"i20", "bzlib.c", "536"}, 6806},
            {{"state27", "bzlib.c", "538"}, 6808},
            {{"strm", "bzlib.c", "549"}, 6816},
            {{"bzalloc", "bzlib.c", "562"}, 6840},
            {{"i", "bzlib.c", "562"}, 6841},
            {{"bzalloc13", "bzlib.c", "562"}, 6844},
            {{"bzfree", "bzlib.c", "563"}, 6848},
            {{"i1", "bzlib.c", "563"}, 6849},
            {{"bzfree17", "bzlib.c", "563"}, 6852},
            {{"bzalloc19", "bzlib.c", "565"}, 6856},
            {{"i2", "bzlib.c", "565"}, 6857},
            {{"opaque", "bzlib.c", "565"}, 6858},
            {{"i3", "bzlib.c", "565"}, 6859},
            {{"call20", "bzlib.c", "565"}, 6860},
            {{"i4", "bzlib.c", "565"}, 6862},
            {{"i5", "bzlib.c", "568"}, 6869},
            {{"state", "bzlib.c", "568"}, 6870},
            {{"total_in_lo32", "bzlib.c", "573"}, 6880},
            {{"total_in_hi32", "bzlib.c", "574"}, 6882},
            {{"total_out_lo32", "bzlib.c", "575"}, 6884},
            {{"total_out_hi32", "bzlib.c", "576"}, 6886},
            {{"strm", "bzlib.c", "864"}, 6946},
            {{"state", "bzlib.c", "869"}, 6952},
            {{"i", "bzlib.c", "869"}, 6953},
            {{"i1", "bzlib.c", "869"}, 6954},
            {{"blockRandomised", "bzlib.c", "766"}, 7107},
            {{"arrayidx", "bzlib.c", "774"}, 7147},
            {{"arrayidx61", "bzlib.c", "791"}, 7254},
            {{"arrayidx128", "bzlib.c", "797"}, 7350},
            {{"arrayidx196", "bzlib.c", "803"}, 7445},
            {{"arrayidx263", "bzlib.c", "808"}, 7538},
            {{"arrayidx318", "bzlib.c", "811"}, 7618},
            {{"arrayidx364", "bzlib.c", "823"}, 7689},
            {{"arrayidx", "bzlib.c", "605"}, 8049},
            {{"arrayidx52", "bzlib.c", "622"}, 8139},
            {{"arrayidx105", "bzlib.c", "628"}, 8218},
            {{"arrayidx159", "bzlib.c", "634"}, 8297},
            {{"arrayidx212", "bzlib.c", "639"}, 8374},
            {{"arrayidx255", "bzlib.c", "642"}, 8440},
            {{"arrayidx308", "bzlib.c", "672"}, 8575},
            {{"arrayidx323", "bzlib.c", "683"}, 8612},
            {{"strm", "bzlib.c", "918"}, 8789},
            {{"state", "bzlib.c", "922"}, 8795},
            {{"i", "bzlib.c", "922"}, 8796},
            {{"strm4", "bzlib.c", "924"}, 8802},
            {{"i2", "bzlib.c", "924"}, 8803},
            {{"bzfree", "bzlib.c", "926"}, 8811},
            {{"i4", "bzlib.c", "926"}, 8812},
            {{"opaque", "bzlib.c", "926"}, 8813},
            {{"i5", "bzlib.c", "926"}, 8814},
            {{"i6", "bzlib.c", "926"}, 8816},
            {{"i7", "bzlib.c", "926"}, 8817},
            {{"bzfree14", "bzlib.c", "927"}, 8825},
            {{"i9", "bzlib.c", "927"}, 8826},
            {{"opaque15", "bzlib.c", "927"}, 8827},
            {{"i10", "bzlib.c", "927"}, 8828},
            {{"i11", "bzlib.c", "927"}, 8830},
            {{"i12", "bzlib.c", "927"}, 8831},
            {{"bzfree20", "bzlib.c", "928"}, 8839},
            {{"i14", "bzlib.c", "928"}, 8840},
            {{"opaque21", "bzlib.c", "928"}, 8841},
            {{"i15", "bzlib.c", "928"}, 8842},
            {{"i16", "bzlib.c", "928"}, 8844},
            {{"bzfree24", "bzlib.c", "930"}, 8848},
            {{"i17", "bzlib.c", "930"}, 8849},
            {{"opaque25", "bzlib.c", "930"}, 8850},
            {{"i18", "bzlib.c", "930"}, 8851},
            {{"state26", "bzlib.c", "930"}, 8852},
            {{"i19", "bzlib.c", "930"}, 8853},
            {{"state27", "bzlib.c", "931"}, 8855},
            {{"bzerror", "bzlib.c", "980"}, 8861},
            {{"call", "bzlib.c", "1005"}, 8911},
            {{"i", "bzlib.c", "1005"}, 8913},
            {{"lastErr32", "bzlib.c", "1007"}, 8924},
            {{"lastErr40", "bzlib.c", "1009"}, 8936},
            {{"initialisedOk", "bzlib.c", "1010"}, 8940},
            {{"bufN", "bzlib.c", "1011"}, 8942},
            {{"handle", "bzlib.c", "1012"}, 8944},
            {{"writing", "bzlib.c", "1013"}, 8946},
            {{"strm", "bzlib.c", "1014"}, 8948},
            {{"bzalloc", "bzlib.c", "1014"}, 8949},
            {{"strm42", "bzlib.c", "1015"}, 8951},
            {{"bzfree", "bzlib.c", "1015"}, 8952},
            {{"strm43", "bzlib.c", "1016"}, 8954},
            {{"opaque", "bzlib.c", "1016"}, 8955},
            {{"strm47", "bzlib.c", "1019"}, 8964},
            {{"lastErr56", "bzlib.c", "1022"}, 8976},
            {{"i1", "bzlib.c", "1022"}, 8980},
            {{"strm59", "bzlib.c", "1024"}, 8983},
            {{"avail_in", "bzlib.c", "1024"}, 8984},
            {{"initialisedOk60", "bzlib.c", "1025"}, 8986},
            {{"i2", "bzlib.c", "1026"}, 8988},
            {{"retval.0", "bzlib.c", "0"}, 8990},
            {{"bzerror", "bzlib.c", "1032"}, 8993},
            {{"b", "bzlib.c", "1032"}, 8994},
            {{"buf", "bzlib.c", "1032"}, 8995},
            {{"i", "bzlib.c", "1039"}, 9001},
            {{"lastErr", "bzlib.c", "1041"}, 9010},
            {{"lastErr14", "bzlib.c", "1043"}, 9027},
            {{"writing", "bzlib.c", "1044"}, 9033},
            {{"lastErr23", "bzlib.c", "1045"}, 9044},
            {{"lastErr33", "bzlib.c", "1050"}, 9058},
            {{"strm", "bzlib.c", "1052"}, 9063},
            {{"avail_in", "bzlib.c", "1052"}, 9064},
            {{"strm36", "bzlib.c", "1053"}, 9066},
            {{"next_in", "bzlib.c", "1053"}, 9067},
            {{"strm37", "bzlib.c", "1056"}, 9071},
            {{"avail_out", "bzlib.c", "1056"}, 9072},
            {{"buf38", "bzlib.c", "1057"}, 9074},
            {{"arraydecay", "bzlib.c", "1057"}, 9075},
            {{"strm39", "bzlib.c", "1057"}, 9076},
            {{"next_out", "bzlib.c", "1057"}, 9077},
            {{"strm40", "bzlib.c", "1058"}, 9079},
            {{"lastErr48", "bzlib.c", "1060"}, 9091},
            {{"strm51", "bzlib.c", "1062"}, 9096},
            {{"avail_out52", "bzlib.c", "1062"}, 9097},
            {{"strm55", "bzlib.c", "1063"}, 9101},
            {{"avail_out56", "bzlib.c", "1063"}, 9102},
            {{"buf57", "bzlib.c", "1064"}, 9106},
            {{"arraydecay58", "bzlib.c", "1064"}, 9107},
            {{"handle", "bzlib.c", "1064"}, 9108},
            {{"lastErr67", "bzlib.c", "1067"}, 9122},
            {{"strm71", "bzlib.c", "1070"}, 9129},
            {{"avail_in72", "bzlib.c", "1070"}, 9130},
            {{"lastErr80", "bzlib.c", "1071"}, 9141},
            {{"bzerror", "bzlib.c", "1077"}, 9151},
            {{"b", "bzlib.c", "1077"}, 9152},
            {{"nbytes_in", "bzlib.c", "1077"}, 9154},
            {{"nbytes_out", "bzlib.c", "1077"}, 9155},
            {{"bzerror", "bzlib.c", "1089"}, 9164},
            {{"b", "bzlib.c", "1089"}, 9165},
            {{"nbytes_in_lo32", "bzlib.c", "1089"}, 9167},
            {{"nbytes_in_hi32", "bzlib.c", "1089"}, 9168},
            {{"nbytes_out_lo32", "bzlib.c", "1089"}, 9169},
            {{"nbytes_out_hi32", "bzlib.c", "1089"}, 9170},
            {{"i", "bzlib.c", "1099"}, 9178},
            {{"lastErr", "bzlib.c", "1102"}, 9189},
            {{"writing", "bzlib.c", "1103"}, 9195},
            {{"lastErr13", "bzlib.c", "1104"}, 9206},
            {{"lastErr29", "bzlib.c", "1113"}, 9233},
            {{"strm", "bzlib.c", "1115"}, 9239},
            {{"avail_out", "bzlib.c", "1115"}, 9240},
            {{"buf", "bzlib.c", "1116"}, 9242},
            {{"arraydecay", "bzlib.c", "1116"}, 9243},
            {{"strm32", "bzlib.c", "1116"}, 9244},
            {{"next_out", "bzlib.c", "1116"}, 9245},
            {{"strm33", "bzlib.c", "1117"}, 9247},
            {{"lastErr43", "bzlib.c", "1119"}, 9261},
            {{"strm46", "bzlib.c", "1121"}, 9266},
            {{"avail_out47", "bzlib.c", "1121"}, 9267},
            {{"strm50", "bzlib.c", "1122"}, 9271},
            {{"avail_out51", "bzlib.c", "1122"}, 9272},
            {{"buf52", "bzlib.c", "1123"}, 9276},
            {{"arraydecay53", "bzlib.c", "1123"}, 9277},
            {{"handle", "bzlib.c", "1123"}, 9278},
            {{"lastErr62", "bzlib.c", "1126"}, 9291},
            {{"strm75", "bzlib.c", "1140"}, 9311},
            {{"total_in_lo32", "bzlib.c", "1140"}, 9312},
            {{"strm79", "bzlib.c", "1142"}, 9319},
            {{"total_in_hi32", "bzlib.c", "1142"}, 9320},
            {{"strm83", "bzlib.c", "1144"}, 9327},
            {{"total_out_lo32", "bzlib.c", "1144"}, 9328},
            {{"strm87", "bzlib.c", "1146"}, 9335},
            {{"total_out_hi32", "bzlib.c", "1146"}, 9336},
            {{"lastErr94", "bzlib.c", "1148"}, 9348},
            {{"strm96", "bzlib.c", "1149"}, 9352},
            {{"i10", "bzlib.c", "1150"}, 9354},
            {{"bzerror", "bzlib.c", "1155"}, 9359},
            {{"unused", "bzlib.c", "1155"}, 9363},
            {{"call", "bzlib.c", "1182"}, 9417},
            {{"i", "bzlib.c", "1182"}, 9418},
            {{"lastErr37", "bzlib.c", "1184"}, 9429},
            {{"lastErr45", "bzlib.c", "1186"}, 9441},
            {{"initialisedOk", "bzlib.c", "1188"}, 9445},
            {{"handle", "bzlib.c", "1189"}, 9447},
            {{"bufN", "bzlib.c", "1190"}, 9449},
            {{"writing", "bzlib.c", "1191"}, 9451},
            {{"strm", "bzlib.c", "1192"}, 9453},
            {{"bzalloc", "bzlib.c", "1192"}, 9454},
            {{"strm47", "bzlib.c", "1193"}, 9456},
            {{"bzfree", "bzlib.c", "1193"}, 9457},
            {{"strm48", "bzlib.c", "1194"}, 9459},
            {{"opaque", "bzlib.c", "1194"}, 9460},
            {{"unused.addr.0", "None", ""}, 9464},
            {{"add.ptr", "bzlib.c", "1198"}, 9465},
            {{"buf", "bzlib.c", "1197"}, 9473},
            {{"bufN50", "bzlib.c", "1197"}, 9474},
            {{"arrayidx", "bzlib.c", "1197"}, 9477},
            {{"bufN51", "bzlib.c", "1197"}, 9479},
            {{"strm52", "bzlib.c", "1202"}, 9486},
            {{"lastErr61", "bzlib.c", "1204"}, 9498},
            {{"i4", "bzlib.c", "1204"}, 9502},
            {{"bufN64", "bzlib.c", "1206"}, 9505},
            {{"strm65", "bzlib.c", "1206"}, 9507},
            {{"avail_in", "bzlib.c", "1206"}, 9508},
            {{"buf66", "bzlib.c", "1207"}, 9510},
            {{"arraydecay", "bzlib.c", "1207"}, 9511},
            {{"strm67", "bzlib.c", "1207"}, 9512},
            {{"next_in", "bzlib.c", "1207"}, 9513},
            {{"initialisedOk68", "bzlib.c", "1209"}, 9515},
            {{"i6", "bzlib.c", "1210"}, 9517},
            {{"retval.0", "bzlib.c", "0"}, 9519},
            {{"bzerror", "bzlib.c", "1215"}, 9522},
            {{"b", "bzlib.c", "1215"}, 9523},
            {{"i", "bzlib.c", "1217"}, 9526},
            {{"lastErr", "bzlib.c", "1219"}, 9535},
            {{"lastErr11", "bzlib.c", "1221"}, 9548},
            {{"writing", "bzlib.c", "1223"}, 9554},
            {{"lastErr20", "bzlib.c", "1224"}, 9565},
            {{"initialisedOk", "bzlib.c", "1226"}, 9570},
            {{"strm", "bzlib.c", "1227"}, 9574},
            {{"i3", "bzlib.c", "1228"}, 9578},
            {{"bzerror", "bzlib.c", "1233"}, 9583},
            {{"b", "bzlib.c", "1233"}, 9584},
            {{"buf", "bzlib.c", "1233"}, 9585},
            {{"i", "bzlib.c", "1240"}, 9591},
            {{"lastErr", "bzlib.c", "1242"}, 9600},
            {{"lastErr14", "bzlib.c", "1245"}, 9617},
            {{"writing", "bzlib.c", "1247"}, 9623},
            {{"lastErr23", "bzlib.c", "1248"}, 9634},
            {{"lastErr33", "bzlib.c", "1251"}, 9648},
            {{"strm", "bzlib.c", "1253"}, 9653},
            {{"avail_out", "bzlib.c", "1253"}, 9654},
            {{"strm36", "bzlib.c", "1254"}, 9656},
            {{"next_out", "bzlib.c", "1254"}, 9657},
            {{"strm37", "bzlib.c", "1261"}, 9661},
            {{"avail_in", "bzlib.c", "1261"}, 9662},
            {{"handle", "bzlib.c", "1261"}, 9666},
            {{"buf41", "bzlib.c", "1262"}, 9673},
            {{"arraydecay", "bzlib.c", "1262"}, 9674},
            {{"handle42", "bzlib.c", "1262"}, 9675},
            {{"bufN", "bzlib.c", "1266"}, 9679},
            {{"bufN44", "bzlib.c", "1267"}, 9681},
            {{"strm45", "bzlib.c", "1267"}, 9683},
            {{"avail_in46", "bzlib.c", "1267"}, 9684},
            {{"buf47", "bzlib.c", "1268"}, 9686},
            {{"arraydecay48", "bzlib.c", "1268"}, 9687},
            {{"strm49", "bzlib.c", "1268"}, 9688},
            {{"next_in", "bzlib.c", "1268"}, 9689},
            {{"strm51", "bzlib.c", "1271"}, 9693},
            {{"lastErr62", "bzlib.c", "1274"}, 9707},
            {{"handle67", "bzlib.c", "1276"}, 9714},
            {{"strm71", "bzlib.c", "1277"}, 9720},
            {{"avail_in72", "bzlib.c", "1277"}, 9721},
            {{"strm76", "bzlib.c", "1277"}, 9725},
            {{"avail_out77", "bzlib.c", "1277"}, 9726},
            {{"lastErr88", "bzlib.c", "1278"}, 9738},
            {{"lastErr101", "bzlib.c", "1281"}, 9752},
            {{"strm103", "bzlib.c", "1282"}, 9756},
            {{"avail_out104", "bzlib.c", "1282"}, 9757},
            {{"strm106", "bzlib.c", "1283"}, 9761},
            {{"avail_out107", "bzlib.c", "1283"}, 9762},
            {{"lastErr118", "bzlib.c", "1284"}, 9773},
            {{"bzerror", "bzlib.c", "1293"}, 9796},
            {{"b", "bzlib.c", "1293"}, 9797},
            {{"unused", "bzlib.c", "1293"}, 9798},
            {{"nUnused", "bzlib.c", "1293"}, 9799},
            {{"i", "bzlib.c", "1299"}, 9804},
            {{"lastErr", "bzlib.c", "1301"}, 9815},
            {{"lastErr7", "bzlib.c", "1302"}, 9821},
            {{"lastErr15", "bzlib.c", "1303"}, 9832},
            {{"lastErr26", "bzlib.c", "1305"}, 9848},
            {{"lastErr34", "bzlib.c", "1307"}, 9860},
            {{"strm", "bzlib.c", "1308"}, 9864},
            {{"avail_in", "bzlib.c", "1308"}, 9865},
            {{"strm36", "bzlib.c", "1309"}, 9868},
            {{"next_in", "bzlib.c", "1309"}, 9869},
            {{"i3", "bzlib.c", "1309"}, 9870},
            {{"dest", "bzlib.c", "1319"}, 9877},
            {{"source", "bzlib.c", "1319"}, 9879},
            {{"strm", "bzlib.c", "1328"}, 9884},
            {{"strm", "bzlib.c", "1328"}, 9885},
            {{"bzalloc", "bzlib.c", "1339"}, 9921},
            {{"bzfree", "bzlib.c", "1340"}, 9923},
            {{"opaque", "bzlib.c", "1341"}, 9925},
            {{"next_in", "bzlib.c", "1346"}, 9932},
            {{"next_out", "bzlib.c", "1347"}, 9934},
            {{"avail_in", "bzlib.c", "1348"}, 9936},
            {{"avail_out", "bzlib.c", "1349"}, 9939},
            {{"avail_out29", "bzlib.c", "1356"}, 9951},
            {{"dest", "bzlib.c", "1371"}, 9970},
            {{"source", "bzlib.c", "1371"}, 9972},
            {{"strm", "bzlib.c", "1379"}, 9976},
            {{"strm", "bzlib.c", "1379"}, 9977},
            {{"bzalloc", "bzlib.c", "1388"}, 10001},
            {{"bzfree", "bzlib.c", "1389"}, 10003},
            {{"opaque", "bzlib.c", "1390"}, 10005},
            {{"next_in", "bzlib.c", "1394"}, 10012},
            {{"next_out", "bzlib.c", "1395"}, 10014},
            {{"avail_in", "bzlib.c", "1396"}, 10016},
            {{"avail_out", "bzlib.c", "1397"}, 10019},
            {{"avail_out21", "bzlib.c", "1404"}, 10031},
            {{"avail_out23", "bzlib.c", "1409"}, 10039},
            {{"call", "bzlib.c", "1555"}, 10059},
            {{"bzerr", "bzlib.c", "1464"}, 10068},
            {{"bzerr", "bzlib.c", "1464"}, 10069},
            {{"unused", "bzlib.c", "1465"}, 10070},
            {{"unused", "bzlib.c", "1465"}, 10071},
            {{"mode2", "bzlib.c", "1468"}, 10073},
            {{"i", "bzlib.c", "1468"}, 10083},
            {{"call", "bzlib.c", "1490"}, 10122},
            {{"arraydecay", "bzlib.c", "1496"}, 10150},
            {{"call10", "bzlib.c", "1496"}, 10154},
            {{"arraydecay11", "bzlib.c", "1497"}, 10157},
            {{"call12", "bzlib.c", "1497"}, 10158},
            {{"call41", "bzlib.c", "1527"}, 10203},
            {{"arraydecay43", "bzlib.c", "1531"}, 10207},
            {{"call44", "bzlib.c", "1530"}, 10208},
            {{"bzfp.0", "bzlib.c", "0"}, 10211},
            {{"retval.0", "bzlib.c", "0"}, 10223},
            {{"call", "bzlib.c", "1564"}, 10238},
            {{"b", "bzlib.c", "1569"}, 10243},
            {{"buf", "bzlib.c", "1569"}, 10244},
            {{"bzerr", "bzlib.c", "1571"}, 10246},
            {{"bzerr", "bzlib.c", "1571"}, 10247},
            {{"b", "bzlib.c", "1583"}, 10274},
            {{"buf", "bzlib.c", "1583"}, 10275},
            {{"bzerr", "bzlib.c", "1585"}, 10277},
            {{"bzerr", "bzlib.c", "1585"}, 10278},
            {{"b", "bzlib.c", "1605"}, 10301},
            {{"bzerr", "bzlib.c", "1607"}, 10302},
            {{"bzerr", "bzlib.c", "1607"}, 10303},
            {{"arrayidx", "bzlib.c", "1663"}, 10357},
            {{"yy", "compress.c", "166"}, 10610},
            {{"arrayidx9", "compress.c", "205"}, 10659},
            {{"arrayidx27", "compress.c", "214"}, 10704},
            {{"arrayidx58", "compress.c", "237"}, 10768},
            {{"arrayidx59", "compress.c", "238"}, 10771},
            {{"arrayidx60", "compress.c", "238"}, 10773},
            {{"arrayidx61", "compress.c", "239"}, 10775},
            {{"ryy_j.0", "compress.c", "0"}, 10782},
            {{"incdec.ptr", "compress.c", "243"}, 10783},
            {{"arrayidx68", "compress.c", "248"}, 10795},
            {{"arrayidx69", "compress.c", "249"}, 10797},
            {{"cost", "compress.c", "300"}, 10893},
            {{"fave", "compress.c", "301"}, 10895},
            {{"pos", "compress.c", "507"}, 10897},
            {{"inUse16", "compress.c", "540"}, 10899},
            {{"arrayidx109", "compress.c", "368"}, 11152},
            {{"arrayidx208", "compress.c", "400"}, 11307},
            {{"arrayidx1121", "compress.c", "427"}, 12636},
            {{"arrayidx1123", "compress.c", "427"}, 12640},
            {{"arrayidx1126", "compress.c", "428"}, 12644},
            {{"arrayidx1129", "compress.c", "428"}, 12648},
            {{"arrayidx1132", "compress.c", "429"}, 12652},
            {{"arrayidx1135", "compress.c", "429"}, 12656},
            {{"arrayidx1155", "compress.c", "435"}, 12688},
            {{"arrayidx1171", "compress.c", "445"}, 12721},
            {{"arrayidx1177", "compress.c", "445"}, 12727},
            {{"arrayidx1185", "compress.c", "447"}, 12742},
            {{"arrayidx1680", "compress.c", "484"}, 13404},
            {{"arrayidx1722", "compress.c", "508"}, 13468},
            {{"arrayidx1734", "compress.c", "512"}, 13489},
            {{"arrayidx1743", "compress.c", "516"}, 13507},
            {{"arrayidx1745", "compress.c", "517"}, 13510},
            {{"arrayidx1747", "compress.c", "519"}, 13513},
            {{"arrayidx1820", "compress.c", "542"}, 13629},
            {{"arrayidx1831", "compress.c", "544"}, 13648},
            {{"arrayidx1844", "compress.c", "549"}, 13672},
            {{"arrayidx1857", "compress.c", "552"}, 13694},
            {{"pos", "decompress.c", "344"}, 14727},
            {{"arrayidx1427", "decompress.c", "345"}, 17208},
            {{"arrayidx1439", "decompress.c", "349"}, 17228},
            {{"arrayidx1447", "decompress.c", "350"}, 17242},
            {{"arrayidx1449", "decompress.c", "350"}, 17245},
            {{"arrayidx1452", "decompress.c", "351"}, 17250},
            {{"arrayidx2782", "decompress.c", "572"}, 19856},
            {{"arrayidx2884", "decompress.c", "591"}, 20019},
            {{"heap", "huffman.c", "115"}, 21043},
            {{"weight", "huffman.c", "116"}, 21045},
            {{"parent", "huffman.c", "117"}, 21047},
            {{"arrayidx5", "huffman.c", "120"}, 21078},
            {{"arrayidx6", "huffman.c", "127"}, 21088},
            {{"arrayidx7", "huffman.c", "128"}, 21090},
            {{"arrayidx8", "huffman.c", "129"}, 21092},
            {{"arrayidx13", "huffman.c", "132"}, 21106},
            {{"arrayidx16", "huffman.c", "134"}, 21110},
            {{"arrayidx18", "huffman.c", "135"}, 21114},
            {{"arrayidx21", "huffman.c", "135"}, 21123},
            {{"arrayidx23", "huffman.c", "135"}, 21127},
            {{"arrayidx25", "huffman.c", "135"}, 21130},
            {{"arrayidx30", "huffman.c", "135"}, 21136},
            {{"arrayidx32", "huffman.c", "135"}, 21139},
            {{"arrayidx35", "huffman.c", "135"}, 21144},
            {{"arrayidx43", "huffman.c", "141"}, 21167},
            {{"arrayidx45", "huffman.c", "141"}, 21171},
            {{"arrayidx46", "huffman.c", "141"}, 21173},
            {{"arrayidx50", "huffman.c", "141"}, 21179},
            {{"arrayidx60", "huffman.c", "141"}, 21197},
            {{"arrayidx62", "huffman.c", "141"}, 21200},
            {{"arrayidx64", "huffman.c", "141"}, 21203},
            {{"arrayidx66", "huffman.c", "141"}, 21206},
            {{"arrayidx72", "huffman.c", "141"}, 21216},
            {{"arrayidx74", "huffman.c", "141"}, 21219},
            {{"arrayidx76", "huffman.c", "141"}, 21222},
            {{"arrayidx81", "huffman.c", "141"}, 21228},
            {{"arrayidx83", "huffman.c", "141"}, 21231},
            {{"arrayidx86", "huffman.c", "141"}, 21236},
            {{"arrayidx87", "huffman.c", "142"}, 21238},
            {{"arrayidx89", "huffman.c", "142"}, 21242},
            {{"arrayidx90", "huffman.c", "142"}, 21244},
            {{"arrayidx96", "huffman.c", "142"}, 21250},
            {{"arrayidx107", "huffman.c", "142"}, 21268},
            {{"arrayidx109", "huffman.c", "142"}, 21271},
            {{"arrayidx111", "huffman.c", "142"}, 21274},
            {{"arrayidx113", "huffman.c", "142"}, 21277},
            {{"arrayidx119", "huffman.c", "142"}, 21287},
            {{"arrayidx121", "huffman.c", "142"}, 21290},
            {{"arrayidx123", "huffman.c", "142"}, 21293},
            {{"arrayidx128", "huffman.c", "142"}, 21299},
            {{"arrayidx130", "huffman.c", "142"}, 21302},
            {{"arrayidx133", "huffman.c", "142"}, 21307},
            {{"arrayidx136", "huffman.c", "144"}, 21311},
            {{"arrayidx138", "huffman.c", "144"}, 21314},
            {{"arrayidx140", "huffman.c", "145"}, 21317},
            {{"arrayidx142", "huffman.c", "145"}, 21322},
            {{"arrayidx146", "huffman.c", "145"}, 21327},
            {{"arrayidx149", "huffman.c", "145"}, 21331},
            {{"arrayidx154", "huffman.c", "145"}, 21337},
            {{"arrayidx158", "huffman.c", "145"}, 21343},
            {{"arrayidx164", "huffman.c", "145"}, 21351},
            {{"arrayidx166", "huffman.c", "146"}, 21354},
            {{"arrayidx169", "huffman.c", "148"}, 21358},
            {{"arrayidx173", "huffman.c", "149"}, 21362},
            {{"arrayidx176", "huffman.c", "149"}, 21371},
            {{"arrayidx179", "huffman.c", "149"}, 21375},
            {{"arrayidx181", "huffman.c", "149"}, 21378},
            {{"arrayidx186", "huffman.c", "149"}, 21384},
            {{"arrayidx188", "huffman.c", "149"}, 21387},
            {{"arrayidx192", "huffman.c", "149"}, 21392},
            {{"arrayidx202", "huffman.c", "158"}, 21425},
            {{"arrayidx206", "huffman.c", "158"}, 21430},
            {{"arrayidx225", "huffman.c", "183"}, 21462},
            {{"arrayidx230", "huffman.c", "185"}, 21471},
            {{"call", "None", ""}, 21739},
            {{"call", "None", ""}, 21743},
            {{"i2", "spec.c", "89"}, 21746},
            {{"i2", "spec.c", "89"}, 21747},
            {{"i2", "spec.c", "89"}, 21748},
            {{"i2", "spec.c", "89"}, 21749},
            {{"arraydecay", "spec.c", "124"}, 21751},
            {{"buf", "spec.c", "185"}, 21759},
            {{"buf", "spec.c", "261"}, 21767},
            {{"i", "bzip2.c", "402"}, 21769},
            {{"i1", "bzip2.c", "402"}, 21770},
            {{"i", "bzlib.c", "1468"}, 21772},
            {{"arraydecay", "bzlib.c", "1496"}, 21773},
            {{"arraydecay11", "bzlib.c", "1497"}, 21776}
        };
        
        // Graph Representation: Vector of (pointer, pointee) pairs
        const std::vector<EdgeT> graph = {
            {22, 250},
            {91, 9417},
            {230, 22},
            {231, 22},
            {235, 22},
            {236, 22},
            {243, 22},
            {244, 22},
            {254, 22},
            {255, 22},
            {258, 22},
            {259, 22},
            {260, 250},
            {277, 22},
            {278, 22},
            {345, 305},
            {347, 305},
            {370, 22},
            {371, 22},
            {376, 22},
            {377, 22},
            {386, 305},
            {387, 305},
            {397, 22},
            {398, 22},
            {423, 21743},
            {438, 22},
            {439, 22},
            {442, 22},
            {443, 22},
            {455, 22},
            {456, 22},
            {472, 21743},
            {480, 22},
            {481, 22},
            {495, 22},
            {496, 22},
            {501, 22},
            {502, 22},
            {507, 22},
            {508, 22},
            {513, 22},
            {514, 22},
            {528, 22},
            {529, 22},
            {532, 22},
            {533, 22},
            {538, 22},
            {539, 22},
            {544, 22},
            {545, 22},
            {591, 22},
            {592, 22},
            {595, 22},
            {596, 22},
            {609, 22},
            {610, 22},
            {614, 22},
            {615, 22},
            {620, 22},
            {621, 22},
            {624, 22},
            {625, 22},
            {636, 22},
            {637, 22},
            {640, 22},
            {641, 22},
            {648, 22},
            {649, 22},
            {666, 5296},
            {666, 9417},
            {666, 4803},
            {688, 22},
            {689, 22},
            {692, 22},
            {693, 22},
            {706, 22},
            {707, 22},
            {712, 22},
            {713, 22},
            {718, 22},
            {719, 22},
            {722, 22},
            {723, 22},
            {735, 22},
            {736, 22},
            {739, 22},
            {740, 22},
            {748, 22},
            {749, 22},
            {782, 22},
            {783, 22},
            {786, 22},
            {787, 22},
            {800, 22},
            {801, 22},
            {804, 22},
            {805, 22},
            {845, 22},
            {846, 22},
            {852, 22},
            {853, 22},
            {859, 22},
            {860, 22},
            {863, 22},
            {864, 22},
            {894, 22},
            {895, 22},
            {904, 22},
            {905, 22},
            {908, 22},
            {909, 22},
            {914, 22},
            {915, 22},
            {918, 22},
            {919, 22},
            {944, 22},
            {945, 22},
            {948, 22},
            {949, 22},
            {956, 22},
            {957, 22},
            {962, 22},
            {963, 22},
            {977, 5296},
            {977, 8911},
            {998, 22},
            {999, 22},
            {1002, 22},
            {1003, 22},
            {1012, 22},
            {1013, 22},
            {1019, 22},
            {1020, 22},
            {1052, 22},
            {1053, 22},
            {1056, 22},
            {1057, 22},
            {1065, 22},
            {1066, 22},
            {1176, 1150},
            {1245, 1150},
            {1506, 1478},
            {1524, 1478},
            {1542, 1478},
            {1545, 1480},
            {1561, 1478},
            {1564, 1478},
            {1586, 1478},
            {1591, 1478},
            {1627, 1478},
            {1633, 1478},
            {1980, 1480},
            {1987, 1480},
            {2016, 1320},
            {2388, 2020},
            {2391, 2018},
            {2424, 2018},
            {2435, 2018},
            {2444, 2018},
            {2465, 2018},
            {2468, 2018},
            {2482, 2018},
            {2505, 2018},
            {2586, 2020},
            {2609, 2022},
            {2620, 2024},
            {2638, 2022},
            {2660, 2020},
            {2665, 2022},
            {2692, 2024},
            {2714, 2020},
            {2719, 2024},
            {2733, 2022},
            {2737, 2024},
            {2742, 2022},
            {2747, 2024},
            {2776, 2020},
            {2873, 1320},
            {2902, 2875},
            {2905, 2877},
            {2908, 2879},
            {2929, 2875},
            {2933, 2877},
            {2937, 2879},
            {3115, 2875},
            {3118, 2877},
            {3122, 2879},
            {3225, 2881},
            {3227, 2883},
            {3229, 2885},
            {3231, 2881},
            {3233, 2883},
            {3235, 2885},
            {3238, 2881},
            {3241, 2883},
            {3244, 2885},
            {3246, 2883},
            {3248, 2881},
            {3251, 2883},
            {3253, 2881},
            {3258, 2881},
            {3261, 2881},
            {3263, 2881},
            {3265, 2881},
            {3267, 2883},
            {3270, 2883},
            {3272, 2883},
            {3274, 2883},
            {3276, 2885},
            {3279, 2885},
            {3281, 2885},
            {3283, 2885},
            {3287, 2883},
            {3289, 2881},
            {3292, 2883},
            {3294, 2881},
            {3299, 2881},
            {3302, 2881},
            {3304, 2881},
            {3306, 2881},
            {3308, 2883},
            {3311, 2883},
            {3313, 2883},
            {3315, 2883},
            {3317, 2885},
            {3320, 2885},
            {3322, 2885},
            {3324, 2885},
            {3328, 2883},
            {3330, 2881},
            {3333, 2883},
            {3335, 2881},
            {3340, 2881},
            {3343, 2881},
            {3345, 2881},
            {3347, 2881},
            {3349, 2883},
            {3352, 2883},
            {3354, 2883},
            {3356, 2883},
            {3358, 2885},
            {3361, 2885},
            {3363, 2885},
            {3365, 2885},
            {3369, 2881},
            {3372, 2875},
            {3374, 2883},
            {3377, 2877},
            {3379, 2885},
            {3382, 2879},
            {3386, 2881},
            {3389, 2875},
            {3391, 2883},
            {3394, 2877},
            {3396, 2885},
            {3399, 2879},
            {3403, 2881},
            {3406, 2875},
            {3408, 2883},
            {3411, 2877},
            {3413, 2885},
            {3416, 2879},
            {3429, 1320},
            {3452, 66},
            {3468, 66},
            {3667, 1320},
            {4315, 4303},
            {4318, 4305},
            {4341, 4303},
            {4345, 4305},
            {4631, 4303},
            {4634, 4305},
            {4639, 4303},
            {4642, 4305},
            {4649, 4303},
            {4652, 4305},
            {4657, 4303},
            {4660, 4305},
            {4802, 4803},
            {4802, 9417},
            {4802, 8911},
            {4802, 5296},
            {4802, 5621},
            {4802, 5631},
            {4812, 10278},
            {4812, 4813},
            {4812, 4815},
            {4812, 10069},
            {4812, 10303},
            {4814, 10278},
            {4814, 4813},
            {4814, 4815},
            {4814, 10069},
            {4814, 10303},
            {4816, 4817},
            {4816, 4819},
            {4818, 4817},
            {4818, 4819},
            {4820, 4821},
            {4820, 4823},
            {4822, 4821},
            {4822, 4823},
            {4837, 8911},
            {4862, 5296},
            {4862, 9417},
            {4862, 4803},
            {4868, 4803},
            {4868, 9417},
            {4868, 8911},
            {4868, 5296},
            {4868, 5621},
            {4868, 5631},
            {4936, 4817},
            {4936, 4819},
            {4940, 4817},
            {4940, 4819},
            {4952, 4817},
            {4953, 4819},
            {5001, 4821},
            {5001, 4823},
            {5011, 4821},
            {5011, 4823},
            {5012, 4821},
            {5012, 4823},
            {5019, 4821},
            {5019, 4823},
            {5020, 4821},
            {5020, 4823},
            {5026, 4821},
            {5026, 4823},
            {5027, 4821},
            {5027, 4823},
            {5032, 4821},
            {5032, 4823},
            {5033, 4821},
            {5033, 4823},
            {5039, 4821},
            {5039, 4823},
            {5040, 4821},
            {5040, 4823},
            {5045, 4821},
            {5045, 4823},
            {5046, 4821},
            {5046, 4823},
            {5051, 4821},
            {5051, 4823},
            {5052, 4821},
            {5052, 4823},
            {5056, 4821},
            {5056, 4823},
            {5057, 4821},
            {5057, 4823},
            {5061, 4821},
            {5061, 4823},
            {5080, 4821},
            {5080, 4823},
            {5082, 4821},
            {5082, 4823},
            {5095, 4817},
            {5095, 4819},
            {5096, 4821},
            {5096, 4823},
            {5106, 5100},
            {5107, 4821},
            {5107, 4823},
            {5123, 5098},
            {5135, 4817},
            {5135, 4819},
            {5148, 5098},
            {5151, 4817},
            {5151, 4819},
            {5169, 9417},
            {5180, 9417},
            {5182, 9417},
            {5193, 9417},
            {5223, 5100},
            {5238, 5100},
            {5240, 5100},
            {5247, 5100},
            {5249, 5100},
            {5258, 5100},
            {5268, 5100},
            {5270, 5100},
            {5291, 10247},
            {5291, 5292},
            {5291, 5294},
            {5291, 10069},
            {5291, 10303},
            {5293, 5292},
            {5293, 10069},
            {5293, 5294},
            {5293, 10303},
            {5295, 5296},
            {5295, 8911},
            {5296, 4803},
            {5296, 9417},
            {5296, 8911},
            {5296, 5296},
            {5296, 5621},
            {5296, 5631},
            {5297, 5298},
            {5297, 10071},
            {5302, 9417},
            {5302, 5621},
            {5302, 5631},
            {5322, 5298},
            {5322, 10071},
            {5324, 9417},
            {5341, 5296},
            {5341, 9417},
            {5341, 5621},
            {5341, 5631},
            {5360, 5296},
            {5360, 8911},
            {5378, 9417},
            {5378, 5621},
            {5378, 5631},
            {5390, 9417},
            {5390, 5621},
            {5390, 5631},
            {5393, 5298},
            {5461, 5296},
            {5461, 9417},
            {5461, 4803},
            {5466, 5296},
            {5466, 8911},
            {5514, 9417},
            {5527, 9417},
            {5540, 9417},
            {5542, 9417},
            {5580, 9885},
            {5580, 8911},
            {5614, 9885},
            {5614, 8911},
            {5615, 5296},
            {5615, 9417},
            {5615, 5621},
            {5615, 5631},
            {5618, 9885},
            {5618, 8911},
            {5621, 4803},
            {5621, 9417},
            {5621, 8911},
            {5621, 5296},
            {5621, 5621},
            {5621, 5631},
            {5624, 9885},
            {5624, 8911},
            {5625, 9417},
            {5625, 5621},
            {5625, 5631},
            {5628, 9885},
            {5628, 8911},
            {5631, 4803},
            {5631, 9417},
            {5631, 8911},
            {5631, 5296},
            {5631, 5621},
            {5631, 5631},
            {5634, 9885},
            {5634, 8911},
            {5635, 9417},
            {5635, 5631},
            {5636, 9885},
            {5636, 8911},
            {5638, 9417},
            {5641, 9417},
            {5657, 9885},
            {5657, 8911},
            {5658, 9417},
            {5659, 9885},
            {5659, 8911},
            {5660, 9417},
            {5668, 9885},
            {5668, 8911},
            {5669, 9417},
            {5670, 9885},
            {5670, 8911},
            {5671, 9417},
            {5680, 9885},
            {5680, 8911},
            {5681, 9417},
            {5682, 9885},
            {5682, 8911},
            {5683, 9417},
            {5705, 9885},
            {5705, 8911},
            {5706, 9417},
            {5707, 9885},
            {5707, 8911},
            {5708, 9417},
            {5719, 9885},
            {5719, 8911},
            {5720, 9417},
            {5721, 9885},
            {5721, 8911},
            {5722, 9417},
            {5733, 9885},
            {5733, 8911},
            {5734, 9417},
            {5735, 9885},
            {5735, 8911},
            {5736, 9417},
            {5745, 9885},
            {5745, 8911},
            {5746, 9417},
            {5747, 9885},
            {5747, 8911},
            {5748, 9417},
            {5792, 9417},
            {5793, 9885},
            {5793, 8911},
            {5795, 9885},
            {5795, 8911},
            {5797, 9885},
            {5797, 8911},
            {5799, 9885},
            {5799, 8911},
            {5801, 9885},
            {5801, 8911},
            {5831, 5296},
            {5831, 9417},
            {5831, 5621},
            {5831, 5631},
            {5832, 5296},
            {5832, 9417},
            {5832, 5621},
            {5832, 5631},
            {5855, 4803},
            {5855, 9417},
            {5855, 8911},
            {5855, 5296},
            {5855, 5621},
            {5855, 5631},
            {5891, 9885},
            {5891, 8911},
            {5899, 9885},
            {5899, 8911},
            {5900, 9417},
            {5900, 8911},
            {5900, 5296},
            {5900, 5621},
            {5900, 5631},
            {5901, 9417},
            {5901, 8911},
            {5901, 5296},
            {5901, 5621},
            {5901, 5631},
            {5931, 9885},
            {5931, 8911},
            {5940, 9885},
            {5940, 8911},
            {6019, 9885},
            {6019, 8911},
            {6023, 9885},
            {6023, 8911},
            {6024, 4803},
            {6024, 9417},
            {6024, 8911},
            {6024, 5296},
            {6024, 5621},
            {6024, 5631},
            {6164, 9417},
            {6164, 8911},
            {6164, 5296},
            {6164, 5621},
            {6164, 5631},
            {6307, 166},
            {6450, 166},
            {6582, 166},
            {6741, 9885},
            {6741, 8911},
            {6747, 9885},
            {6747, 8911},
            {6748, 9417},
            {6748, 8911},
            {6748, 5296},
            {6748, 5621},
            {6748, 5631},
            {6754, 9417},
            {6754, 8911},
            {6754, 5296},
            {6754, 5621},
            {6754, 5631},
            {6755, 4803},
            {6755, 9417},
            {6755, 8911},
            {6755, 5296},
            {6755, 5621},
            {6755, 5631},
            {6763, 9885},
            {6763, 8911},
            {6764, 5296},
            {6764, 9417},
            {6764, 5621},
            {6764, 5631},
            {6765, 9885},
            {6765, 8911},
            {6766, 5296},
            {6766, 9417},
            {6766, 5621},
            {6766, 5631},
            {6768, 5296},
            {6768, 9417},
            {6768, 5621},
            {6768, 5631},
            {6769, 5296},
            {6769, 9417},
            {6769, 5621},
            {6769, 5631},
            {6777, 9885},
            {6777, 8911},
            {6778, 5296},
            {6778, 9417},
            {6778, 5621},
            {6778, 5631},
            {6779, 9885},
            {6779, 8911},
            {6780, 5296},
            {6780, 9417},
            {6780, 5621},
            {6780, 5631},
            {6782, 5296},
            {6782, 9417},
            {6782, 5621},
            {6782, 5631},
            {6783, 5296},
            {6783, 9417},
            {6783, 5621},
            {6783, 5631},
            {6791, 9885},
            {6791, 8911},
            {6792, 5296},
            {6792, 9417},
            {6792, 5621},
            {6792, 5631},
            {6793, 9885},
            {6793, 8911},
            {6794, 5296},
            {6794, 9417},
            {6794, 5621},
            {6794, 5631},
            {6796, 5296},
            {6796, 9417},
            {6796, 5621},
            {6796, 5631},
            {6797, 5296},
            {6797, 9417},
            {6797, 5621},
            {6797, 5631},
            {6801, 9885},
            {6801, 8911},
            {6802, 5296},
            {6802, 9417},
            {6802, 5621},
            {6802, 5631},
            {6803, 9885},
            {6803, 8911},
            {6804, 5296},
            {6804, 9417},
            {6804, 5621},
            {6804, 5631},
            {6805, 9885},
            {6805, 8911},
            {6806, 5296},
            {6806, 9417},
            {6806, 5621},
            {6806, 5631},
            {6808, 9885},
            {6808, 8911},
            {6816, 9417},
            {6816, 9977},
            {6840, 9417},
            {6840, 9977},
            {6841, 9417},
            {6841, 5621},
            {6841, 5631},
            {6844, 9417},
            {6844, 9977},
            {6848, 9417},
            {6848, 9977},
            {6849, 9417},
            {6849, 5621},
            {6849, 5631},
            {6852, 9417},
            {6852, 9977},
            {6856, 9417},
            {6856, 9977},
            {6857, 9417},
            {6857, 5631},
            {6858, 9417},
            {6858, 9977},
            {6859, 9417},
            {6860, 9417},
            {6862, 9417},
            {6869, 9417},
            {6870, 9417},
            {6870, 9977},
            {6880, 9417},
            {6880, 9977},
            {6882, 9417},
            {6882, 9977},
            {6884, 9417},
            {6884, 9977},
            {6886, 9417},
            {6886, 9977},
            {6946, 9417},
            {6946, 9977},
            {6952, 9417},
            {6952, 9977},
            {6953, 5296},
            {6953, 9417},
            {6953, 5621},
            {6953, 5631},
            {6954, 5296},
            {6954, 9417},
            {6954, 5621},
            {6954, 5631},
            {7107, 5296},
            {7107, 9417},
            {7107, 5621},
            {7107, 5631},
            {7147, 166},
            {7254, 172},
            {7350, 172},
            {7445, 172},
            {7538, 172},
            {7618, 172},
            {7689, 166},
            {8049, 166},
            {8139, 172},
            {8218, 172},
            {8297, 172},
            {8374, 172},
            {8440, 172},
            {8575, 166},
            {8612, 166},
            {8789, 9417},
            {8789, 9977},
            {8795, 9417},
            {8795, 9977},
            {8796, 5296},
            {8796, 9417},
            {8796, 5621},
            {8796, 5631},
            {8802, 5296},
            {8802, 9417},
            {8802, 5621},
            {8802, 5631},
            {8803, 9417},
            {8803, 8911},
            {8803, 5296},
            {8803, 5621},
            {8803, 5631},
            {8811, 9417},
            {8811, 9977},
            {8812, 5296},
            {8812, 9417},
            {8812, 5621},
            {8812, 5631},
            {8813, 9417},
            {8813, 9977},
            {8814, 5296},
            {8814, 9417},
            {8814, 5621},
            {8814, 5631},
            {8816, 5296},
            {8816, 9417},
            {8816, 5621},
            {8816, 5631},
            {8817, 5296},
            {8817, 9417},
            {8817, 5621},
            {8817, 5631},
            {8825, 9417},
            {8825, 9977},
            {8826, 5296},
            {8826, 9417},
            {8826, 5621},
            {8826, 5631},
            {8827, 9417},
            {8827, 9977},
            {8828, 5296},
            {8828, 9417},
            {8828, 5621},
            {8828, 5631},
            {8830, 5296},
            {8830, 9417},
            {8830, 5621},
            {8830, 5631},
            {8831, 5296},
            {8831, 9417},
            {8831, 5621},
            {8831, 5631},
            {8839, 9417},
            {8839, 9977},
            {8840, 5296},
            {8840, 9417},
            {8840, 5621},
            {8840, 5631},
            {8841, 9417},
            {8841, 9977},
            {8842, 5296},
            {8842, 9417},
            {8842, 5621},
            {8842, 5631},
            {8844, 5296},
            {8844, 9417},
            {8844, 5621},
            {8844, 5631},
            {8848, 9417},
            {8848, 9977},
            {8849, 5296},
            {8849, 9417},
            {8849, 5621},
            {8849, 5631},
            {8850, 9417},
            {8850, 9977},
            {8851, 5296},
            {8851, 9417},
            {8851, 5621},
            {8851, 5631},
            {8852, 9417},
            {8852, 9977},
            {8853, 5296},
            {8853, 9417},
            {8853, 5621},
            {8853, 5631},
            {8855, 9417},
            {8855, 9977},
            {8861, 10069},
            {8861, 4813},
            {8911, 5296},
            {8911, 9417},
            {8911, 5621},
            {8911, 5631},
            {8913, 8911},
            {8924, 8911},
            {8936, 8911},
            {8940, 8911},
            {8942, 8911},
            {8944, 8911},
            {8946, 8911},
            {8948, 8911},
            {8949, 8911},
            {8951, 8911},
            {8952, 8911},
            {8954, 8911},
            {8955, 8911},
            {8964, 9885},
            {8964, 8911},
            {8976, 8911},
            {8980, 8911},
            {8983, 8911},
            {8984, 8911},
            {8986, 8911},
            {8988, 8911},
            {8990, 8911},
            {8993, 10069},
            {8993, 4813},
            {8993, 10278},
            {8994, 8911},
            {8995, 4803},
            {8995, 9417},
            {8995, 8911},
            {8995, 5296},
            {8995, 5621},
            {8995, 5631},
            {9001, 8911},
            {9010, 8911},
            {9027, 8911},
            {9033, 8911},
            {9044, 8911},
            {9058, 8911},
            {9063, 8911},
            {9064, 8911},
            {9066, 8911},
            {9067, 8911},
            {9071, 8911},
            {9072, 8911},
            {9074, 4803},
            {9074, 9417},
            {9074, 8911},
            {9074, 5296},
            {9074, 5621},
            {9074, 5631},
            {9075, 4803},
            {9075, 9417},
            {9075, 8911},
            {9075, 5296},
            {9075, 5621},
            {9075, 5631},
            {9076, 8911},
            {9077, 8911},
            {9079, 9885},
            {9079, 8911},
            {9091, 8911},
            {9096, 8911},
            {9097, 8911},
            {9101, 8911},
            {9102, 8911},
            {9106, 5296},
            {9106, 8911},
            {9107, 5296},
            {9107, 8911},
            {9108, 8911},
            {9122, 8911},
            {9129, 8911},
            {9130, 8911},
            {9141, 8911},
            {9151, 10278},
            {9151, 4813},
            {9151, 4815},
            {9151, 10069},
            {9151, 10303},
            {9152, 8911},
            {9154, 4805},
            {9155, 4809},
            {9164, 10278},
            {9164, 4813},
            {9164, 4815},
            {9164, 10069},
            {9164, 10303},
            {9165, 8911},
            {9167, 4805},
            {9168, 4807},
            {9169, 4809},
            {9170, 4811},
            {9178, 9885},
            {9178, 8911},
            {9189, 8911},
            {9195, 8911},
            {9206, 8911},
            {9233, 8911},
            {9239, 8911},
            {9240, 8911},
            {9242, 9417},
            {9242, 8911},
            {9242, 5296},
            {9242, 5621},
            {9242, 5631},
            {9243, 9417},
            {9243, 8911},
            {9243, 5296},
            {9243, 5621},
            {9243, 5631},
            {9244, 8911},
            {9245, 8911},
            {9247, 9885},
            {9247, 8911},
            {9261, 8911},
            {9266, 8911},
            {9267, 8911},
            {9271, 8911},
            {9272, 8911},
            {9276, 5296},
            {9276, 8911},
            {9277, 5296},
            {9277, 8911},
            {9278, 8911},
            {9291, 8911},
            {9311, 8911},
            {9312, 8911},
            {9319, 8911},
            {9320, 8911},
            {9327, 8911},
            {9328, 8911},
            {9335, 8911},
            {9336, 8911},
            {9348, 8911},
            {9352, 9885},
            {9352, 8911},
            {9354, 8911},
            {9359, 5292},
            {9359, 10069},
            {9363, 5298},
            {9363, 10071},
            {9417, 5296},
            {9417, 9417},
            {9417, 5621},
            {9417, 5631},
            {9418, 9417},
            {9429, 9417},
            {9441, 9417},
            {9445, 9417},
            {9447, 9417},
            {9449, 9417},
            {9451, 9417},
            {9453, 9417},
            {9454, 9417},
            {9456, 9417},
            {9457, 9417},
            {9459, 9417},
            {9460, 9417},
            {9464, 5298},
            {9464, 10071},
            {9465, 5298},
            {9465, 10071},
            {9473, 9417},
            {9474, 9417},
            {9477, 9417},
            {9479, 9417},
            {9486, 9417},
            {9486, 9977},
            {9498, 9417},
            {9502, 9417},
            {9505, 9417},
            {9507, 9417},
            {9508, 9417},
            {9510, 9417},
            {9511, 9417},
            {9512, 9417},
            {9513, 9417},
            {9515, 9417},
            {9517, 9417},
            {9519, 9417},
            {9522, 5292},
            {9522, 10069},
            {9522, 5294},
            {9522, 10303},
            {9523, 9417},
            {9526, 9417},
            {9526, 9977},
            {9535, 9417},
            {9548, 9417},
            {9554, 9417},
            {9565, 9417},
            {9570, 9417},
            {9574, 9417},
            {9574, 9977},
            {9578, 9417},
            {9583, 10247},
            {9583, 5292},
            {9583, 5294},
            {9583, 10069},
            {9583, 10303},
            {9584, 9417},
            {9585, 5296},
            {9585, 9417},
            {9585, 5621},
            {9585, 5631},
            {9591, 9417},
            {9600, 9417},
            {9617, 9417},
            {9623, 9417},
            {9634, 9417},
            {9648, 9417},
            {9653, 9417},
            {9654, 9417},
            {9656, 9417},
            {9657, 9417},
            {9661, 9417},
            {9662, 9417},
            {9666, 9417},
            {9673, 5296},
            {9673, 9417},
            {9673, 4803},
            {9674, 5296},
            {9674, 9417},
            {9674, 4803},
            {9675, 9417},
            {9679, 9417},
            {9681, 9417},
            {9683, 9417},
            {9684, 9417},
            {9686, 5296},
            {9686, 9417},
            {9686, 5621},
            {9686, 5631},
            {9687, 5296},
            {9687, 9417},
            {9687, 5621},
            {9687, 5631},
            {9688, 9417},
            {9689, 9417},
            {9693, 9417},
            {9693, 9977},
            {9707, 9417},
            {9714, 9417},
            {9720, 9417},
            {9721, 9417},
            {9725, 9417},
            {9726, 9417},
            {9738, 9417},
            {9752, 9417},
            {9756, 9417},
            {9757, 9417},
            {9761, 9417},
            {9762, 9417},
            {9773, 9417},
            {9796, 10247},
            {9796, 5292},
            {9796, 5294},
            {9796, 10069},
            {9796, 10303},
            {9797, 9417},
            {9798, 5302},
            {9799, 5300},
            {9804, 9417},
            {9815, 9417},
            {9821, 9417},
            {9832, 9417},
            {9848, 9417},
            {9860, 9417},
            {9864, 9417},
            {9865, 9417},
            {9868, 9417},
            {9869, 9417},
            {9870, 9417},
            {9870, 5621},
            {9870, 5631},
            {9877, 9417},
            {9879, 9417},
            {9884, 9885},
            {9884, 8911},
            {9885, 5296},
            {9885, 9417},
            {9885, 5621},
            {9885, 5631},
            {9921, 9885},
            {9923, 9885},
            {9925, 9885},
            {9932, 9885},
            {9934, 9885},
            {9936, 9885},
            {9939, 9885},
            {9951, 9885},
            {9970, 9417},
            {9972, 9417},
            {9976, 9417},
            {9976, 9977},
            {9977, 5296},
            {9977, 9417},
            {9977, 5621},
            {9977, 5631},
            {10001, 9977},
            {10003, 9977},
            {10005, 9977},
            {10012, 9977},
            {10014, 9977},
            {10016, 9977},
            {10019, 9977},
            {10031, 9977},
            {10039, 9977},
            {10059, 9417},
            {10059, 8911},
            {10068, 5292},
            {10068, 10069},
            {10070, 5298},
            {10070, 10071},
            {10083, 10073},
            {10122, 21739},
            {10150, 10073},
            {10154, 10073},
            {10157, 10073},
            {10158, 10073},
            {10203, 9417},
            {10203, 8911},
            {10207, 5298},
            {10207, 10071},
            {10208, 9417},
            {10208, 8911},
            {10211, 9417},
            {10211, 8911},
            {10223, 9417},
            {10223, 8911},
            {10238, 9417},
            {10238, 8911},
            {10243, 9417},
            {10244, 5296},
            {10244, 9417},
            {10244, 5621},
            {10244, 5631},
            {10246, 10247},
            {10246, 5292},
            {10246, 5294},
            {10246, 10069},
            {10246, 10303},
            {10274, 8911},
            {10275, 4803},
            {10275, 9417},
            {10275, 8911},
            {10275, 5296},
            {10275, 5621},
            {10275, 5631},
            {10277, 10069},
            {10277, 4813},
            {10277, 10278},
            {10301, 8911},
            {10302, 10278},
            {10302, 4813},
            {10302, 4815},
            {10302, 10069},
            {10302, 10303},
            {10357, 149},
            {10659, 10610},
            {10704, 10610},
            {10768, 10610},
            {10771, 10610},
            {10773, 10610},
            {10775, 10610},
            {10782, 10610},
            {10783, 10610},
            {10795, 10610},
            {10797, 10610},
            {11152, 10895},
            {11307, 10893},
            {12636, 10893},
            {12640, 10893},
            {12644, 10893},
            {12648, 10893},
            {12652, 10893},
            {12656, 10893},
            {12688, 10893},
            {12721, 10893},
            {12727, 10893},
            {12742, 10895},
            {13404, 10895},
            {13468, 10897},
            {13489, 10897},
            {13507, 10897},
            {13510, 10897},
            {13513, 10897},
            {13629, 10899},
            {13648, 10899},
            {13672, 10899},
            {13694, 10899},
            {17208, 14727},
            {17228, 14727},
            {17242, 14727},
            {17245, 14727},
            {17250, 14727},
            {19856, 172},
            {20019, 172},
            {21078, 21045},
            {21088, 21043},
            {21090, 21045},
            {21092, 21047},
            {21106, 21047},
            {21110, 21043},
            {21114, 21043},
            {21123, 21045},
            {21127, 21043},
            {21130, 21045},
            {21136, 21043},
            {21139, 21043},
            {21144, 21043},
            {21167, 21043},
            {21171, 21043},
            {21173, 21043},
            {21179, 21043},
            {21197, 21043},
            {21200, 21045},
            {21203, 21043},
            {21206, 21045},
            {21216, 21045},
            {21219, 21043},
            {21222, 21045},
            {21228, 21043},
            {21231, 21043},
            {21236, 21043},
            {21238, 21043},
            {21242, 21043},
            {21244, 21043},
            {21250, 21043},
            {21268, 21043},
            {21271, 21045},
            {21274, 21043},
            {21277, 21045},
            {21287, 21045},
            {21290, 21043},
            {21293, 21045},
            {21299, 21043},
            {21302, 21043},
            {21307, 21043},
            {21311, 21047},
            {21314, 21047},
            {21317, 21045},
            {21322, 21045},
            {21327, 21045},
            {21331, 21045},
            {21337, 21045},
            {21343, 21045},
            {21351, 21045},
            {21354, 21047},
            {21358, 21043},
            {21362, 21043},
            {21371, 21045},
            {21375, 21043},
            {21378, 21045},
            {21384, 21043},
            {21387, 21043},
            {21392, 21043},
            {21425, 21047},
            {21430, 21047},
            {21462, 21045},
            {21471, 21045},
            {21746, 22},
            {21747, 22},
            {21748, 22},
            {21749, 22},
            {21751, 305},
            {21759, 5296},
            {21759, 9417},
            {21759, 4803},
            {21767, 5296},
            {21767, 8911},
            {21769, 5100},
            {21770, 4821},
            {21770, 4823},
            {21772, 10073},
            {21773, 10073},
            {21776, 10073}
        };

        const unsigned int graph_size = 1314;
    
    public:
        inline const std::vector<EdgeT>& getGraph() const {
            return graph;
        }

        inline const std::map<PtrDataT, NodeIdT>& getNodeMap() const {
            return node_map;
        }

        inline unsigned int getGraphSize() const {
            return graph_size;
        }
    };
} // namespace PointerGraph

#endif // PTA_GRAPHS_HPP
